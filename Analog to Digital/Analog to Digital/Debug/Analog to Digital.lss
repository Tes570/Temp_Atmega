
Analog to Digital.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000005c4  00000658  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800104  00800104  0000065c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000068c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c43  00000000  00000000  00000724  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a1  00000000  00000000  00001367  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005e6  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  000022f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000569  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000447  00000000  00000000  00002975  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002dbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4d c0       	rjmp	.+154    	; 0x9c <__ctors_end>
   2:	00 00       	nop
   4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
   6:	00 00       	nop
   8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
   a:	00 00       	nop
   c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
   e:	00 00       	nop
  10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
  12:	00 00       	nop
  14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
  16:	00 00       	nop
  18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
  22:	00 00       	nop
  24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>
  26:	00 00       	nop
  28:	56 c0       	rjmp	.+172    	; 0xd6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	54 c0       	rjmp	.+168    	; 0xd6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	52 c0       	rjmp	.+164    	; 0xd6 <__bad_interrupt>
  32:	00 00       	nop
  34:	ba c0       	rjmp	.+372    	; 0x1aa <__vector_13>
  36:	00 00       	nop
  38:	4e c0       	rjmp	.+156    	; 0xd6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4c c0       	rjmp	.+152    	; 0xd6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4a c0       	rjmp	.+148    	; 0xd6 <__bad_interrupt>
  42:	00 00       	nop
  44:	48 c0       	rjmp	.+144    	; 0xd6 <__bad_interrupt>
  46:	00 00       	nop
  48:	46 c0       	rjmp	.+140    	; 0xd6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	44 c0       	rjmp	.+136    	; 0xd6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	42 c0       	rjmp	.+132    	; 0xd6 <__bad_interrupt>
  52:	00 00       	nop
  54:	40 c0       	rjmp	.+128    	; 0xd6 <__bad_interrupt>
  56:	00 00       	nop
  58:	3e c0       	rjmp	.+124    	; 0xd6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3c c0       	rjmp	.+120    	; 0xd6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3a c0       	rjmp	.+116    	; 0xd6 <__bad_interrupt>
  62:	00 00       	nop
  64:	38 c0       	rjmp	.+112    	; 0xd6 <__bad_interrupt>
  66:	00 00       	nop
  68:	36 c0       	rjmp	.+108    	; 0xd6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	34 c0       	rjmp	.+104    	; 0xd6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	32 c0       	rjmp	.+100    	; 0xd6 <__bad_interrupt>
  72:	00 00       	nop
  74:	30 c0       	rjmp	.+96     	; 0xd6 <__bad_interrupt>
  76:	00 00       	nop
  78:	2e c0       	rjmp	.+92     	; 0xd6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2c c0       	rjmp	.+88     	; 0xd6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2a c0       	rjmp	.+84     	; 0xd6 <__bad_interrupt>
  82:	00 00       	nop
  84:	28 c0       	rjmp	.+80     	; 0xd6 <__bad_interrupt>
  86:	00 00       	nop
  88:	26 c0       	rjmp	.+76     	; 0xd6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	9e 01       	movw	r18, r28
  8e:	a4 01       	movw	r20, r8
  90:	b4 01       	movw	r22, r8
  92:	d0 01       	movw	r26, r0
  94:	77 02       	muls	r23, r23
  96:	18 02       	muls	r17, r24
  98:	3e 02       	muls	r19, r30
  9a:	6c 02       	muls	r22, r28

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d0 e4       	ldi	r29, 0x40	; 64
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e4 ec       	ldi	r30, 0xC4	; 196
  b0:	f5 e0       	ldi	r31, 0x05	; 5
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>

000000c2 <__do_clear_bss>:
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	a4 e0       	ldi	r26, 0x04	; 4
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	a6 31       	cpi	r26, 0x16	; 22
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	38 d2       	rcall	.+1136   	; 0x544 <main>
  d4:	75 c2       	rjmp	.+1258   	; 0x5c0 <_exit>

000000d6 <__bad_interrupt>:
  d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  d8:	cf 92       	push	r12
  da:	df 92       	push	r13
  dc:	ef 92       	push	r14
  de:	ff 92       	push	r15
  e0:	1f 93       	push	r17
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  ea:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <tasksNum>
  ee:	88 23       	and	r24, r24
  f0:	09 f4       	brne	.+2      	; 0xf4 <TimerISR+0x1c>
  f2:	53 c0       	rjmp	.+166    	; 0x19a <TimerISR+0xc2>
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	1b e0       	ldi	r17, 0x0B	; 11
  f8:	c0 91 12 01 	lds	r28, 0x0112	; 0x800112 <tasks>
  fc:	d0 91 13 01 	lds	r29, 0x0113	; 0x800113 <tasks+0x1>
 100:	18 9f       	mul	r17, r24
 102:	c0 0d       	add	r28, r0
 104:	d1 1d       	adc	r29, r1
 106:	11 24       	eor	r1, r1
 108:	4d 81       	ldd	r20, Y+5	; 0x05
 10a:	5e 81       	ldd	r21, Y+6	; 0x06
 10c:	6f 81       	ldd	r22, Y+7	; 0x07
 10e:	78 85       	ldd	r23, Y+8	; 0x08
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	9a 81       	ldd	r25, Y+2	; 0x02
 114:	ab 81       	ldd	r26, Y+3	; 0x03
 116:	bc 81       	ldd	r27, Y+4	; 0x04
 118:	48 17       	cp	r20, r24
 11a:	59 07       	cpc	r21, r25
 11c:	6a 07       	cpc	r22, r26
 11e:	7b 07       	cpc	r23, r27
 120:	b0 f0       	brcs	.+44     	; 0x14e <TimerISR+0x76>
 122:	88 81       	ld	r24, Y
 124:	e9 85       	ldd	r30, Y+9	; 0x09
 126:	fa 85       	ldd	r31, Y+10	; 0x0a
 128:	08 2e       	mov	r0, r24
 12a:	00 0c       	add	r0, r0
 12c:	99 0b       	sbc	r25, r25
 12e:	09 95       	icall
 130:	88 83       	st	Y, r24
 132:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 136:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <tasks>
 13a:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <tasks+0x1>
 13e:	18 9f       	mul	r17, r24
 140:	e0 0d       	add	r30, r0
 142:	f1 1d       	adc	r31, r1
 144:	11 24       	eor	r1, r1
 146:	15 82       	std	Z+5, r1	; 0x05
 148:	16 82       	std	Z+6, r1	; 0x06
 14a:	17 82       	std	Z+7, r1	; 0x07
 14c:	10 86       	std	Z+8, r1	; 0x08
 14e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 152:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <tasks>
 156:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <tasks+0x1>
 15a:	18 9f       	mul	r17, r24
 15c:	e0 0d       	add	r30, r0
 15e:	f1 1d       	adc	r31, r1
 160:	11 24       	eor	r1, r1
 162:	c5 80       	ldd	r12, Z+5	; 0x05
 164:	d6 80       	ldd	r13, Z+6	; 0x06
 166:	e7 80       	ldd	r14, Z+7	; 0x07
 168:	f0 84       	ldd	r15, Z+8	; 0x08
 16a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 16e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 172:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 176:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 17a:	4c 0d       	add	r20, r12
 17c:	5d 1d       	adc	r21, r13
 17e:	6e 1d       	adc	r22, r14
 180:	7f 1d       	adc	r23, r15
 182:	45 83       	std	Z+5, r20	; 0x05
 184:	56 83       	std	Z+6, r21	; 0x06
 186:	67 83       	std	Z+7, r22	; 0x07
 188:	70 87       	std	Z+8, r23	; 0x08
 18a:	8f 5f       	subi	r24, 0xFF	; 255
 18c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 190:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <tasksNum>
 194:	89 17       	cp	r24, r25
 196:	08 f4       	brcc	.+2      	; 0x19a <TimerISR+0xc2>
 198:	af cf       	rjmp	.-162    	; 0xf8 <TimerISR+0x20>
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	1f 91       	pop	r17
 1a0:	ff 90       	pop	r15
 1a2:	ef 90       	pop	r14
 1a4:	df 90       	pop	r13
 1a6:	cf 90       	pop	r12
 1a8:	08 95       	ret

000001aa <__vector_13>:
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	0b b6       	in	r0, 0x3b	; 59
 1b6:	0f 92       	push	r0
 1b8:	2f 93       	push	r18
 1ba:	3f 93       	push	r19
 1bc:	4f 93       	push	r20
 1be:	5f 93       	push	r21
 1c0:	6f 93       	push	r22
 1c2:	7f 93       	push	r23
 1c4:	8f 93       	push	r24
 1c6:	9f 93       	push	r25
 1c8:	af 93       	push	r26
 1ca:	bf 93       	push	r27
 1cc:	ef 93       	push	r30
 1ce:	ff 93       	push	r31
 1d0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <tasksPeriodCntDown>
 1d4:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <tasksPeriodCntDown+0x1>
 1d8:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <tasksPeriodCntDown+0x2>
 1dc:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <tasksPeriodCntDown+0x3>
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	a1 09       	sbc	r26, r1
 1e4:	b1 09       	sbc	r27, r1
 1e6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 1ea:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 1ee:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 1f2:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 1f6:	89 2b       	or	r24, r25
 1f8:	8a 2b       	or	r24, r26
 1fa:	8b 2b       	or	r24, r27
 1fc:	89 f4       	brne	.+34     	; 0x220 <__vector_13+0x76>
 1fe:	6c df       	rcall	.-296    	; 0xd8 <TimerISR>
 200:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 204:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 208:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 20c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 210:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 214:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 218:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 21c:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 220:	ff 91       	pop	r31
 222:	ef 91       	pop	r30
 224:	bf 91       	pop	r27
 226:	af 91       	pop	r26
 228:	9f 91       	pop	r25
 22a:	8f 91       	pop	r24
 22c:	7f 91       	pop	r23
 22e:	6f 91       	pop	r22
 230:	5f 91       	pop	r21
 232:	4f 91       	pop	r20
 234:	3f 91       	pop	r19
 236:	2f 91       	pop	r18
 238:	0f 90       	pop	r0
 23a:	0b be       	out	0x3b, r0	; 59
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <TimerSet>:
 246:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 24a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 24e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 252:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 256:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <tasksPeriodCntDown>
 25a:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <tasksPeriodCntDown+0x1>
 25e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <tasksPeriodCntDown+0x2>
 262:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <tasksPeriodCntDown+0x3>
 266:	08 95       	ret

00000268 <TimerOn>:
 268:	8b e0       	ldi	r24, 0x0B	; 11
 26a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 26e:	87 e0       	ldi	r24, 0x07	; 7
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 276:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 27a:	82 e0       	ldi	r24, 0x02	; 2
 27c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 280:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 284:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 288:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 28c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 290:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 294:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 298:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 29c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 2a0:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 2a4:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 2a8:	8f b7       	in	r24, 0x3f	; 63
 2aa:	80 68       	ori	r24, 0x80	; 128
 2ac:	8f bf       	out	0x3f, r24	; 63
 2ae:	08 95       	ret

000002b0 <Timer>:
 2b0:	40 91 09 01 	lds	r20, 0x0109	; 0x800109 <time>
 2b4:	50 91 0a 01 	lds	r21, 0x010A	; 0x80010a <time+0x1>
 2b8:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <time+0x2>
 2bc:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <time+0x3>
 2c0:	41 15       	cp	r20, r1
 2c2:	51 05       	cpc	r21, r1
 2c4:	61 05       	cpc	r22, r1
 2c6:	71 05       	cpc	r23, r1
 2c8:	71 f4       	brne	.+28     	; 0x2e6 <Timer+0x36>
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	a0 e0       	ldi	r26, 0x00	; 0
 2d0:	b0 e0       	ldi	r27, 0x00	; 0
 2d2:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <time>
 2d6:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <time+0x1>
 2da:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <time+0x2>
 2de:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <time+0x3>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	08 95       	ret
 2e6:	a0 e0       	ldi	r26, 0x00	; 0
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	48 17       	cp	r20, r24
 2ec:	59 07       	cpc	r21, r25
 2ee:	6a 07       	cpc	r22, r26
 2f0:	7b 07       	cpc	r23, r27
 2f2:	50 f0       	brcs	.+20     	; 0x308 <Timer+0x58>
 2f4:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time>
 2f8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <time+0x1>
 2fc:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <time+0x2>
 300:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <time+0x3>
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	08 95       	ret
 308:	4f 5f       	subi	r20, 0xFF	; 255
 30a:	5f 4f       	sbci	r21, 0xFF	; 255
 30c:	6f 4f       	sbci	r22, 0xFF	; 255
 30e:	7f 4f       	sbci	r23, 0xFF	; 255
 310:	40 93 09 01 	sts	0x0109, r20	; 0x800109 <time>
 314:	50 93 0a 01 	sts	0x010A, r21	; 0x80010a <time+0x1>
 318:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <time+0x2>
 31c:	70 93 0c 01 	sts	0x010C, r23	; 0x80010c <time+0x3>
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	08 95       	ret

00000324 <TickFct_Leader>:
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	ec 01       	movw	r28, r24
 32a:	fc 01       	movw	r30, r24
 32c:	31 96       	adiw	r30, 0x01	; 1
 32e:	e8 30       	cpi	r30, 0x08	; 8
 330:	f1 05       	cpc	r31, r1
 332:	08 f0       	brcs	.+2      	; 0x336 <TickFct_Leader+0x12>
 334:	03 c1       	rjmp	.+518    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 336:	ea 5b       	subi	r30, 0xBA	; 186
 338:	ff 4f       	sbci	r31, 0xFF	; 255
 33a:	39 c1       	rjmp	.+626    	; 0x5ae <__tablejump2__>
 33c:	1b b8       	out	0x0b, r1	; 11
 33e:	15 b8       	out	0x05, r1	; 5
 340:	18 b8       	out	0x08, r1	; 8
 342:	c0 e0       	ldi	r28, 0x00	; 0
 344:	d0 e0       	ldi	r29, 0x00	; 0
 346:	fa c0       	rjmp	.+500    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 348:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 34c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 350:	15 b8       	out	0x05, r1	; 5
 352:	18 b8       	out	0x08, r1	; 8
 354:	01 99       	sbic	0x00, 1	; 0
 356:	02 c0       	rjmp	.+4      	; 0x35c <TickFct_Leader+0x38>
 358:	03 9b       	sbis	0x00, 3	; 0
 35a:	f0 c0       	rjmp	.+480    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	a7 df       	rcall	.-178    	; 0x2b0 <Timer>
 362:	c8 2f       	mov	r28, r24
 364:	d0 e0       	ldi	r29, 0x00	; 0
 366:	ea c0       	rjmp	.+468    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 368:	84 e0       	ldi	r24, 0x04	; 4
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	a1 df       	rcall	.-190    	; 0x2b0 <Timer>
 36e:	88 23       	and	r24, r24
 370:	09 f4       	brne	.+2      	; 0x374 <TickFct_Leader+0x50>
 372:	e4 c0       	rjmp	.+456    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 374:	01 99       	sbic	0x00, 1	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <TickFct_Leader+0x58>
 378:	03 9b       	sbis	0x00, 3	; 0
 37a:	0b c0       	rjmp	.+22     	; 0x392 <TickFct_Leader+0x6e>
 37c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 380:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 384:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 388:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 38c:	c2 e0       	ldi	r28, 0x02	; 2
 38e:	d0 e0       	ldi	r29, 0x00	; 0
 390:	d5 c0       	rjmp	.+426    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 392:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 396:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 39a:	c0 e0       	ldi	r28, 0x00	; 0
 39c:	d0 e0       	ldi	r29, 0x00	; 0
 39e:	ce c0       	rjmp	.+412    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 3a0:	84 e0       	ldi	r24, 0x04	; 4
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	85 df       	rcall	.-246    	; 0x2b0 <Timer>
 3a6:	88 23       	and	r24, r24
 3a8:	09 f4       	brne	.+2      	; 0x3ac <TickFct_Leader+0x88>
 3aa:	c8 c0       	rjmp	.+400    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 3ac:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 3b0:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 3b4:	8a 30       	cpi	r24, 0x0A	; 10
 3b6:	91 05       	cpc	r25, r1
 3b8:	e4 f4       	brge	.+56     	; 0x3f2 <TickFct_Leader+0xce>
 3ba:	01 99       	sbic	0x00, 1	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <TickFct_Leader+0x9e>
 3be:	03 9b       	sbis	0x00, 3	; 0
 3c0:	12 c0       	rjmp	.+36     	; 0x3e6 <TickFct_Leader+0xc2>
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	08 2e       	mov	r0, r24
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <TickFct_Leader+0xaa>
 3ca:	22 0f       	add	r18, r18
 3cc:	33 1f       	adc	r19, r19
 3ce:	0a 94       	dec	r0
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <TickFct_Leader+0xa6>
 3d2:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <data>
 3d6:	50 91 06 01 	lds	r21, 0x0106	; 0x800106 <data+0x1>
 3da:	24 2b       	or	r18, r20
 3dc:	35 2b       	or	r19, r21
 3de:	30 93 06 01 	sts	0x0106, r19	; 0x800106 <data+0x1>
 3e2:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 3ec:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 3f0:	a5 c0       	rjmp	.+330    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 3f2:	01 99       	sbic	0x00, 1	; 0
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <TickFct_Leader+0xd6>
 3f6:	03 9b       	sbis	0x00, 3	; 0
 3f8:	10 c0       	rjmp	.+32     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3fa:	02 9b       	sbis	0x00, 2	; 0
 3fc:	07 c0       	rjmp	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 402:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 406:	c4 e0       	ldi	r28, 0x04	; 4
 408:	d0 e0       	ldi	r29, 0x00	; 0
 40a:	98 c0       	rjmp	.+304    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 40c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 410:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 414:	c3 e0       	ldi	r28, 0x03	; 3
 416:	d0 e0       	ldi	r29, 0x00	; 0
 418:	91 c0       	rjmp	.+290    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 41a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 41e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 422:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 426:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 42a:	c0 e0       	ldi	r28, 0x00	; 0
 42c:	d0 e0       	ldi	r29, 0x00	; 0
 42e:	86 c0       	rjmp	.+268    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	8b b9       	out	0x0b, r24	; 11
 434:	84 e0       	ldi	r24, 0x04	; 4
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	3b df       	rcall	.-394    	; 0x2b0 <Timer>
 43a:	88 23       	and	r24, r24
 43c:	09 f4       	brne	.+2      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43e:	7e c0       	rjmp	.+252    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 440:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 444:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 448:	18 16       	cp	r1, r24
 44a:	19 06       	cpc	r1, r25
 44c:	34 f0       	brlt	.+12     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 44e:	01 96       	adiw	r24, 0x01	; 1
 450:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 454:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 458:	71 c0       	rjmp	.+226    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 45a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 45e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 462:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 466:	80 ff       	sbrs	r24, 0
 468:	05 c0       	rjmp	.+10     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	8b b9       	out	0x0b, r24	; 11
 46e:	c5 e0       	ldi	r28, 0x05	; 5
 470:	d0 e0       	ldi	r29, 0x00	; 0
 472:	64 c0       	rjmp	.+200    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 474:	1b b8       	out	0x0b, r1	; 11
 476:	c5 e0       	ldi	r28, 0x05	; 5
 478:	d0 e0       	ldi	r29, 0x00	; 0
 47a:	60 c0       	rjmp	.+192    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 47c:	84 e0       	ldi	r24, 0x04	; 4
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	17 df       	rcall	.-466    	; 0x2b0 <Timer>
 482:	88 23       	and	r24, r24
 484:	e1 f0       	breq	.+56     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 486:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 48a:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 48e:	8a 30       	cpi	r24, 0x0A	; 10
 490:	91 05       	cpc	r25, r1
 492:	dc f4       	brge	.+54     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 494:	01 96       	adiw	r24, 0x01	; 1
 496:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 49a:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 49e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data>
 4a2:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data+0x1>
 4a6:	a9 01       	movw	r20, r18
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4aa:	55 95       	asr	r21
 4ac:	47 95       	ror	r20
 4ae:	8a 95       	dec	r24
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4b2:	40 ff       	sbrs	r20, 0
 4b4:	03 c0       	rjmp	.+6      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	8b b9       	out	0x0b, r24	; 11
 4ba:	01 c0       	rjmp	.+2      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4bc:	1b b8       	out	0x0b, r1	; 11
 4be:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 4c2:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 4c6:	0a 97       	sbiw	r24, 0x0a	; 10
 4c8:	cc f1       	brlt	.+114    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4ca:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 4ce:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 4d2:	c6 e0       	ldi	r28, 0x06	; 6
 4d4:	d0 e0       	ldi	r29, 0x00	; 0
 4d6:	32 c0       	rjmp	.+100    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	8b b9       	out	0x0b, r24	; 11
 4dc:	84 e0       	ldi	r24, 0x04	; 4
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	e7 de       	rcall	.-562    	; 0x2b0 <Timer>
 4e2:	88 23       	and	r24, r24
 4e4:	59 f1       	breq	.+86     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4e6:	1b b8       	out	0x0b, r1	; 11
 4e8:	c0 e0       	ldi	r28, 0x00	; 0
 4ea:	d0 e0       	ldi	r29, 0x00	; 0
 4ec:	27 c0       	rjmp	.+78     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4ee:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 4f2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 4f6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 4fa:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <data+0x1>
 4fe:	9c 01       	movw	r18, r24
 500:	22 27       	eor	r18, r18
 502:	33 70       	andi	r19, 0x03	; 3
 504:	21 15       	cp	r18, r1
 506:	32 40       	sbci	r19, 0x02	; 2
 508:	b9 f4       	brne	.+46     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 50a:	85 b9       	out	0x05, r24	; 5
 50c:	83 e0       	ldi	r24, 0x03	; 3
 50e:	88 b9       	out	0x08, r24	; 8
 510:	8f e7       	ldi	r24, 0x7F	; 127
 512:	94 e8       	ldi	r25, 0x84	; 132
 514:	2e e1       	ldi	r18, 0x1E	; 30
 516:	81 50       	subi	r24, 0x01	; 1
 518:	90 40       	sbci	r25, 0x00	; 0
 51a:	20 40       	sbci	r18, 0x00	; 0
 51c:	e1 f7       	brne	.-8      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 51e:	00 c0       	rjmp	.+0      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 520:	00 00       	nop
 522:	15 b8       	out	0x05, r1	; 5
 524:	18 b8       	out	0x08, r1	; 8
 526:	83 ec       	ldi	r24, 0xC3	; 195
 528:	99 e0       	ldi	r25, 0x09	; 9
 52a:	01 97       	sbiw	r24, 0x01	; 1
 52c:	f1 f7       	brne	.-4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 530:	00 00       	nop
 532:	c0 e0       	ldi	r28, 0x00	; 0
 534:	d0 e0       	ldi	r29, 0x00	; 0
 536:	02 c0       	rjmp	.+4      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 538:	c0 e0       	ldi	r28, 0x00	; 0
 53a:	d0 e0       	ldi	r29, 0x00	; 0
 53c:	ce 01       	movw	r24, r28
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	08 95       	ret

00000544 <main>:
	return state;
}


int main(void)
{
 544:	cf 93       	push	r28
 546:	df 93       	push	r29
 548:	cd b7       	in	r28, 0x3d	; 61
 54a:	de b7       	in	r29, 0x3e	; 62
 54c:	2b 97       	sbiw	r28, 0x0b	; 11
 54e:	0f b6       	in	r0, 0x3f	; 63
 550:	f8 94       	cli
 552:	de bf       	out	0x3e, r29	; 62
 554:	0f be       	out	0x3f, r0	; 63
 556:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; BOUT = 0x00; // ID LED's
 558:	8f ef       	ldi	r24, 0xFF	; 255
 55a:	84 b9       	out	0x04, r24	; 4
 55c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; COUT = 0x00; // ID LED's
 55e:	87 b9       	out	0x07, r24	; 7
 560:	18 b8       	out	0x08, r1	; 8
	
	DDRD = 0xFF; PORTD = 0x00; // RF Input and Output
 562:	8a b9       	out	0x0a, r24	; 10
 564:	1b b8       	out	0x0b, r1	; 11
	DDRA = 0x00; PORTA = 0xFF; // Temp Resistor
 566:	11 b8       	out	0x01, r1	; 1
 568:	82 b9       	out	0x02, r24	; 2
	
	//unsigned short x =ADC_read(1);
	
	
	//Set_Clock(500);
	tasksNum = 1;
 56a:	91 e0       	ldi	r25, 0x01	; 1
 56c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksNum>
	task tsks[1];
	tasks = tsks;
 570:	9e 01       	movw	r18, r28
 572:	2f 5f       	subi	r18, 0xFF	; 255
 574:	3f 4f       	sbci	r19, 0xFF	; 255
 576:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <tasks+0x1>
 57a:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = -1;
 57e:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].period = 1;
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	a0 e0       	ldi	r26, 0x00	; 0
 586:	b0 e0       	ldi	r27, 0x00	; 0
 588:	8a 83       	std	Y+2, r24	; 0x02
 58a:	9b 83       	std	Y+3, r25	; 0x03
 58c:	ac 83       	std	Y+4, r26	; 0x04
 58e:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 590:	8e 83       	std	Y+6, r24	; 0x06
 592:	9f 83       	std	Y+7, r25	; 0x07
 594:	a8 87       	std	Y+8, r26	; 0x08
 596:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 598:	82 e9       	ldi	r24, 0x92	; 146
 59a:	91 e0       	ldi	r25, 0x01	; 1
 59c:	9b 87       	std	Y+11, r25	; 0x0b
 59e:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	4e de       	rcall	.-868    	; 0x246 <TimerSet>
	TimerOn();
 5aa:	5e de       	rcall	.-836    	; 0x268 <TimerOn>
 5ac:	ff cf       	rjmp	.-2      	; 0x5ac <main+0x68>

000005ae <__tablejump2__>:
 5ae:	ee 0f       	add	r30, r30
 5b0:	ff 1f       	adc	r31, r31
 5b2:	00 24       	eor	r0, r0
 5b4:	00 1c       	adc	r0, r0
 5b6:	0b be       	out	0x3b, r0	; 59
 5b8:	07 90       	elpm	r0, Z+
 5ba:	f6 91       	elpm	r31, Z
 5bc:	e0 2d       	mov	r30, r0
 5be:	09 94       	ijmp

000005c0 <_exit>:
 5c0:	f8 94       	cli

000005c2 <__stop_program>:
 5c2:	ff cf       	rjmp	.-2      	; 0x5c2 <__stop_program>
