
Transciver Custom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000004cc  00000560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800106  00800106  00000566  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000566  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000598  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000baa  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000939  00000000  00000000  000011da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000484  00000000  00000000  00001b13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00001f98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051e  00000000  00000000  000020b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003e9  00000000  00000000  000025d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000029bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4e c0       	rjmp	.+156    	; 0x9e <__ctors_end>
   2:	00 00       	nop
   4:	69 c0       	rjmp	.+210    	; 0xd8 <__bad_interrupt>
   6:	00 00       	nop
   8:	67 c0       	rjmp	.+206    	; 0xd8 <__bad_interrupt>
   a:	00 00       	nop
   c:	65 c0       	rjmp	.+202    	; 0xd8 <__bad_interrupt>
   e:	00 00       	nop
  10:	63 c0       	rjmp	.+198    	; 0xd8 <__bad_interrupt>
  12:	00 00       	nop
  14:	61 c0       	rjmp	.+194    	; 0xd8 <__bad_interrupt>
  16:	00 00       	nop
  18:	5f c0       	rjmp	.+190    	; 0xd8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5d c0       	rjmp	.+186    	; 0xd8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5b c0       	rjmp	.+182    	; 0xd8 <__bad_interrupt>
  22:	00 00       	nop
  24:	59 c0       	rjmp	.+178    	; 0xd8 <__bad_interrupt>
  26:	00 00       	nop
  28:	57 c0       	rjmp	.+174    	; 0xd8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	55 c0       	rjmp	.+170    	; 0xd8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	53 c0       	rjmp	.+166    	; 0xd8 <__bad_interrupt>
  32:	00 00       	nop
  34:	bb c0       	rjmp	.+374    	; 0x1ac <__vector_13>
  36:	00 00       	nop
  38:	4f c0       	rjmp	.+158    	; 0xd8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4d c0       	rjmp	.+154    	; 0xd8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4b c0       	rjmp	.+150    	; 0xd8 <__bad_interrupt>
  42:	00 00       	nop
  44:	49 c0       	rjmp	.+146    	; 0xd8 <__bad_interrupt>
  46:	00 00       	nop
  48:	47 c0       	rjmp	.+142    	; 0xd8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	45 c0       	rjmp	.+138    	; 0xd8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	43 c0       	rjmp	.+134    	; 0xd8 <__bad_interrupt>
  52:	00 00       	nop
  54:	41 c0       	rjmp	.+130    	; 0xd8 <__bad_interrupt>
  56:	00 00       	nop
  58:	3f c0       	rjmp	.+126    	; 0xd8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3d c0       	rjmp	.+122    	; 0xd8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3b c0       	rjmp	.+118    	; 0xd8 <__bad_interrupt>
  62:	00 00       	nop
  64:	39 c0       	rjmp	.+114    	; 0xd8 <__bad_interrupt>
  66:	00 00       	nop
  68:	37 c0       	rjmp	.+110    	; 0xd8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	35 c0       	rjmp	.+106    	; 0xd8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	33 c0       	rjmp	.+102    	; 0xd8 <__bad_interrupt>
  72:	00 00       	nop
  74:	31 c0       	rjmp	.+98     	; 0xd8 <__bad_interrupt>
  76:	00 00       	nop
  78:	2f c0       	rjmp	.+94     	; 0xd8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2d c0       	rjmp	.+90     	; 0xd8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2b c0       	rjmp	.+86     	; 0xd8 <__bad_interrupt>
  82:	00 00       	nop
  84:	29 c0       	rjmp	.+82     	; 0xd8 <__bad_interrupt>
  86:	00 00       	nop
  88:	27 c0       	rjmp	.+78     	; 0xd8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	14 02       	muls	r17, r20
  8e:	85 01       	movw	r16, r10
  90:	91 01       	movw	r18, r2
  92:	9e 01       	movw	r18, r28
  94:	bf 01       	movw	r22, r30
  96:	14 02       	muls	r17, r20
  98:	ca 01       	movw	r24, r20
  9a:	e3 01       	movw	r28, r6
  9c:	04 02       	muls	r16, r20

0000009e <__ctors_end>:
  9e:	11 24       	eor	r1, r1
  a0:	1f be       	out	0x3f, r1	; 63
  a2:	cf ef       	ldi	r28, 0xFF	; 255
  a4:	d0 e4       	ldi	r29, 0x40	; 64
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
  aa:	11 e0       	ldi	r17, 0x01	; 1
  ac:	a0 e0       	ldi	r26, 0x00	; 0
  ae:	b1 e0       	ldi	r27, 0x01	; 1
  b0:	ec ec       	ldi	r30, 0xCC	; 204
  b2:	f4 e0       	ldi	r31, 0x04	; 4
  b4:	00 e0       	ldi	r16, 0x00	; 0
  b6:	0b bf       	out	0x3b, r16	; 59
  b8:	02 c0       	rjmp	.+4      	; 0xbe <__do_copy_data+0x14>
  ba:	07 90       	elpm	r0, Z+
  bc:	0d 92       	st	X+, r0
  be:	a6 30       	cpi	r26, 0x06	; 6
  c0:	b1 07       	cpc	r27, r17
  c2:	d9 f7       	brne	.-10     	; 0xba <__do_copy_data+0x10>

000000c4 <__do_clear_bss>:
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	a6 e0       	ldi	r26, 0x06	; 6
  c8:	b1 e0       	ldi	r27, 0x01	; 1
  ca:	01 c0       	rjmp	.+2      	; 0xce <.do_clear_bss_start>

000000cc <.do_clear_bss_loop>:
  cc:	1d 92       	st	X+, r1

000000ce <.do_clear_bss_start>:
  ce:	a3 31       	cpi	r26, 0x13	; 19
  d0:	b2 07       	cpc	r27, r18
  d2:	e1 f7       	brne	.-8      	; 0xcc <.do_clear_bss_loop>
  d4:	be d1       	rcall	.+892    	; 0x452 <main>
  d6:	f8 c1       	rjmp	.+1008   	; 0x4c8 <_exit>

000000d8 <__bad_interrupt>:
  d8:	93 cf       	rjmp	.-218    	; 0x0 <__vectors>

000000da <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  da:	cf 92       	push	r12
  dc:	df 92       	push	r13
  de:	ef 92       	push	r14
  e0:	ff 92       	push	r15
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
  ec:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <tasksNum>
  f0:	88 23       	and	r24, r24
  f2:	09 f4       	brne	.+2      	; 0xf6 <TimerISR+0x1c>
  f4:	53 c0       	rjmp	.+166    	; 0x19c <TimerISR+0xc2>
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	1b e0       	ldi	r17, 0x0B	; 11
  fa:	c0 91 11 01 	lds	r28, 0x0111	; 0x800111 <tasks>
  fe:	d0 91 12 01 	lds	r29, 0x0112	; 0x800112 <tasks+0x1>
 102:	18 9f       	mul	r17, r24
 104:	c0 0d       	add	r28, r0
 106:	d1 1d       	adc	r29, r1
 108:	11 24       	eor	r1, r1
 10a:	4d 81       	ldd	r20, Y+5	; 0x05
 10c:	5e 81       	ldd	r21, Y+6	; 0x06
 10e:	6f 81       	ldd	r22, Y+7	; 0x07
 110:	78 85       	ldd	r23, Y+8	; 0x08
 112:	89 81       	ldd	r24, Y+1	; 0x01
 114:	9a 81       	ldd	r25, Y+2	; 0x02
 116:	ab 81       	ldd	r26, Y+3	; 0x03
 118:	bc 81       	ldd	r27, Y+4	; 0x04
 11a:	48 17       	cp	r20, r24
 11c:	59 07       	cpc	r21, r25
 11e:	6a 07       	cpc	r22, r26
 120:	7b 07       	cpc	r23, r27
 122:	b0 f0       	brcs	.+44     	; 0x150 <TimerISR+0x76>
 124:	88 81       	ld	r24, Y
 126:	e9 85       	ldd	r30, Y+9	; 0x09
 128:	fa 85       	ldd	r31, Y+10	; 0x0a
 12a:	08 2e       	mov	r0, r24
 12c:	00 0c       	add	r0, r0
 12e:	99 0b       	sbc	r25, r25
 130:	09 95       	icall
 132:	88 83       	st	Y, r24
 134:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 138:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <tasks>
 13c:	f0 91 12 01 	lds	r31, 0x0112	; 0x800112 <tasks+0x1>
 140:	18 9f       	mul	r17, r24
 142:	e0 0d       	add	r30, r0
 144:	f1 1d       	adc	r31, r1
 146:	11 24       	eor	r1, r1
 148:	15 82       	std	Z+5, r1	; 0x05
 14a:	16 82       	std	Z+6, r1	; 0x06
 14c:	17 82       	std	Z+7, r1	; 0x07
 14e:	10 86       	std	Z+8, r1	; 0x08
 150:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 154:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <tasks>
 158:	f0 91 12 01 	lds	r31, 0x0112	; 0x800112 <tasks+0x1>
 15c:	18 9f       	mul	r17, r24
 15e:	e0 0d       	add	r30, r0
 160:	f1 1d       	adc	r31, r1
 162:	11 24       	eor	r1, r1
 164:	c5 80       	ldd	r12, Z+5	; 0x05
 166:	d6 80       	ldd	r13, Z+6	; 0x06
 168:	e7 80       	ldd	r14, Z+7	; 0x07
 16a:	f0 84       	ldd	r15, Z+8	; 0x08
 16c:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <tasksPeriodGCD>
 170:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <tasksPeriodGCD+0x1>
 174:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <tasksPeriodGCD+0x2>
 178:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <tasksPeriodGCD+0x3>
 17c:	4c 0d       	add	r20, r12
 17e:	5d 1d       	adc	r21, r13
 180:	6e 1d       	adc	r22, r14
 182:	7f 1d       	adc	r23, r15
 184:	45 83       	std	Z+5, r20	; 0x05
 186:	56 83       	std	Z+6, r21	; 0x06
 188:	67 83       	std	Z+7, r22	; 0x07
 18a:	70 87       	std	Z+8, r23	; 0x08
 18c:	8f 5f       	subi	r24, 0xFF	; 255
 18e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 192:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <tasksNum>
 196:	89 17       	cp	r24, r25
 198:	08 f4       	brcc	.+2      	; 0x19c <TimerISR+0xc2>
 19a:	af cf       	rjmp	.-162    	; 0xfa <TimerISR+0x20>
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	ff 90       	pop	r15
 1a4:	ef 90       	pop	r14
 1a6:	df 90       	pop	r13
 1a8:	cf 90       	pop	r12
 1aa:	08 95       	ret

000001ac <__vector_13>:
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	0b b6       	in	r0, 0x3b	; 59
 1b8:	0f 92       	push	r0
 1ba:	2f 93       	push	r18
 1bc:	3f 93       	push	r19
 1be:	4f 93       	push	r20
 1c0:	5f 93       	push	r21
 1c2:	6f 93       	push	r22
 1c4:	7f 93       	push	r23
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	ef 93       	push	r30
 1d0:	ff 93       	push	r31
 1d2:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <tasksPeriodCntDown>
 1d6:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <tasksPeriodCntDown+0x1>
 1da:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <tasksPeriodCntDown+0x2>
 1de:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <tasksPeriodCntDown+0x3>
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	a1 09       	sbc	r26, r1
 1e6:	b1 09       	sbc	r27, r1
 1e8:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksPeriodCntDown>
 1ec:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <tasksPeriodCntDown+0x1>
 1f0:	a0 93 0f 01 	sts	0x010F, r26	; 0x80010f <tasksPeriodCntDown+0x2>
 1f4:	b0 93 10 01 	sts	0x0110, r27	; 0x800110 <tasksPeriodCntDown+0x3>
 1f8:	89 2b       	or	r24, r25
 1fa:	8a 2b       	or	r24, r26
 1fc:	8b 2b       	or	r24, r27
 1fe:	89 f4       	brne	.+34     	; 0x222 <__vector_13+0x76>
 200:	6c df       	rcall	.-296    	; 0xda <TimerISR>
 202:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tasksPeriodGCD>
 206:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <tasksPeriodGCD+0x1>
 20a:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <tasksPeriodGCD+0x2>
 20e:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <tasksPeriodGCD+0x3>
 212:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksPeriodCntDown>
 216:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <tasksPeriodCntDown+0x1>
 21a:	a0 93 0f 01 	sts	0x010F, r26	; 0x80010f <tasksPeriodCntDown+0x2>
 21e:	b0 93 10 01 	sts	0x0110, r27	; 0x800110 <tasksPeriodCntDown+0x3>
 222:	ff 91       	pop	r31
 224:	ef 91       	pop	r30
 226:	bf 91       	pop	r27
 228:	af 91       	pop	r26
 22a:	9f 91       	pop	r25
 22c:	8f 91       	pop	r24
 22e:	7f 91       	pop	r23
 230:	6f 91       	pop	r22
 232:	5f 91       	pop	r21
 234:	4f 91       	pop	r20
 236:	3f 91       	pop	r19
 238:	2f 91       	pop	r18
 23a:	0f 90       	pop	r0
 23c:	0b be       	out	0x3b, r0	; 59
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <TimerSet>:
 248:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <tasksPeriodGCD>
 24c:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <tasksPeriodGCD+0x1>
 250:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tasksPeriodGCD+0x2>
 254:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <tasksPeriodGCD+0x3>
 258:	60 93 0d 01 	sts	0x010D, r22	; 0x80010d <tasksPeriodCntDown>
 25c:	70 93 0e 01 	sts	0x010E, r23	; 0x80010e <tasksPeriodCntDown+0x1>
 260:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tasksPeriodCntDown+0x2>
 264:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <tasksPeriodCntDown+0x3>
 268:	08 95       	ret

0000026a <TimerOn>:
 26a:	8b e0       	ldi	r24, 0x0B	; 11
 26c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 270:	87 e0       	ldi	r24, 0x07	; 7
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 278:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 27c:	82 e0       	ldi	r24, 0x02	; 2
 27e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 282:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 286:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 28a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tasksPeriodGCD>
 28e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <tasksPeriodGCD+0x1>
 292:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <tasksPeriodGCD+0x2>
 296:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <tasksPeriodGCD+0x3>
 29a:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksPeriodCntDown>
 29e:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <tasksPeriodCntDown+0x1>
 2a2:	a0 93 0f 01 	sts	0x010F, r26	; 0x80010f <tasksPeriodCntDown+0x2>
 2a6:	b0 93 10 01 	sts	0x0110, r27	; 0x800110 <tasksPeriodCntDown+0x3>
 2aa:	8f b7       	in	r24, 0x3f	; 63
 2ac:	80 68       	ori	r24, 0x80	; 128
 2ae:	8f bf       	out	0x3f, r24	; 63
 2b0:	08 95       	ret

000002b2 <Timer>:
 2b2:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <time>
 2b6:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <time+0x1>
 2ba:	21 15       	cp	r18, r1
 2bc:	31 05       	cpc	r19, r1
 2be:	41 f4       	brne	.+16     	; 0x2d0 <Timer+0x1e>
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <time+0x1>
 2c8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <time>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	08 95       	ret
 2d0:	28 17       	cp	r18, r24
 2d2:	39 07       	cpc	r19, r25
 2d4:	30 f0       	brcs	.+12     	; 0x2e2 <Timer+0x30>
 2d6:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <time+0x1>
 2da:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <time>
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	08 95       	ret
 2e2:	2f 5f       	subi	r18, 0xFF	; 255
 2e4:	3f 4f       	sbci	r19, 0xFF	; 255
 2e6:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <time+0x1>
 2ea:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <time>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	08 95       	ret

000002f2 <TickFct_Leader>:
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	ec 01       	movw	r28, r24
 2f8:	fc 01       	movw	r30, r24
 2fa:	31 96       	adiw	r30, 0x01	; 1
 2fc:	e9 30       	cpi	r30, 0x09	; 9
 2fe:	f1 05       	cpc	r31, r1
 300:	08 f0       	brcs	.+2      	; 0x304 <TickFct_Leader+0x12>
 302:	8c c0       	rjmp	.+280    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 304:	ea 5b       	subi	r30, 0xBA	; 186
 306:	ff 4f       	sbci	r31, 0xFF	; 255
 308:	d6 c0       	rjmp	.+428    	; 0x4b6 <__tablejump2__>
 30a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <Tstate+0x1>
 30e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate>
 312:	58 9b       	sbis	0x0b, 0	; 11
 314:	9a c0       	rjmp	.+308    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	cb df       	rcall	.-106    	; 0x2b2 <Timer>
 31c:	c8 2f       	mov	r28, r24
 31e:	d0 e0       	ldi	r29, 0x00	; 0
 320:	94 c0       	rjmp	.+296    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 322:	84 e0       	ldi	r24, 0x04	; 4
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	c5 df       	rcall	.-118    	; 0x2b2 <Timer>
 328:	88 23       	and	r24, r24
 32a:	09 f4       	brne	.+2      	; 0x32e <TickFct_Leader+0x3c>
 32c:	8e c0       	rjmp	.+284    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 32e:	58 9b       	sbis	0x0b, 0	; 11
 330:	7e c0       	rjmp	.+252    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 332:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <data>
 336:	c2 e0       	ldi	r28, 0x02	; 2
 338:	d0 e0       	ldi	r29, 0x00	; 0
 33a:	87 c0       	rjmp	.+270    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 33c:	84 e0       	ldi	r24, 0x04	; 4
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	b8 df       	rcall	.-144    	; 0x2b2 <Timer>
 342:	88 23       	and	r24, r24
 344:	09 f4       	brne	.+2      	; 0x348 <TickFct_Leader+0x56>
 346:	81 c0       	rjmp	.+258    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 348:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Tstate>
 34c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Tstate+0x1>
 350:	88 30       	cpi	r24, 0x08	; 8
 352:	91 05       	cpc	r25, r1
 354:	0c f0       	brlt	.+2      	; 0x358 <TickFct_Leader+0x66>
 356:	6e c0       	rjmp	.+220    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 358:	2b b1       	in	r18, 0x0b	; 11
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	08 2e       	mov	r0, r24
 35e:	02 c0       	rjmp	.+4      	; 0x364 <TickFct_Leader+0x72>
 360:	22 0f       	add	r18, r18
 362:	33 1f       	adc	r19, r19
 364:	0a 94       	dec	r0
 366:	e2 f7       	brpl	.-8      	; 0x360 <TickFct_Leader+0x6e>
 368:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <data>
 36c:	23 2b       	or	r18, r19
 36e:	20 93 07 01 	sts	0x0107, r18	; 0x800107 <data>
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <Tstate+0x1>
 378:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <Tstate>
 37c:	66 c0       	rjmp	.+204    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 37e:	84 e0       	ldi	r24, 0x04	; 4
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	97 df       	rcall	.-210    	; 0x2b2 <Timer>
 384:	88 23       	and	r24, r24
 386:	09 f4       	brne	.+2      	; 0x38a <TickFct_Leader+0x98>
 388:	60 c0       	rjmp	.+192    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 38a:	58 99       	sbic	0x0b, 0	; 11
 38c:	56 c0       	rjmp	.+172    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 38e:	c0 e0       	ldi	r28, 0x00	; 0
 390:	d0 e0       	ldi	r29, 0x00	; 0
 392:	5b c0       	rjmp	.+182    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 394:	84 e0       	ldi	r24, 0x04	; 4
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	8c df       	rcall	.-232    	; 0x2b2 <Timer>
 39a:	88 23       	and	r24, r24
 39c:	09 f4       	brne	.+2      	; 0x3a0 <TickFct_Leader+0xae>
 39e:	55 c0       	rjmp	.+170    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3a0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Tstate>
 3a4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Tstate+0x1>
 3a8:	02 97       	sbiw	r24, 0x02	; 2
 3aa:	0c f0       	brlt	.+2      	; 0x3ae <TickFct_Leader+0xbc>
 3ac:	49 c0       	rjmp	.+146    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3ae:	82 e0       	ldi	r24, 0x02	; 2
 3b0:	8b b9       	out	0x0b, r24	; 11
 3b2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Tstate>
 3b6:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Tstate+0x1>
 3ba:	01 96       	adiw	r24, 0x01	; 1
 3bc:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <Tstate+0x1>
 3c0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <Tstate>
 3c4:	42 c0       	rjmp	.+132    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3c6:	84 e0       	ldi	r24, 0x04	; 4
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	73 df       	rcall	.-282    	; 0x2b2 <Timer>
 3cc:	88 23       	and	r24, r24
 3ce:	e9 f1       	breq	.+122    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3d0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Tstate>
 3d4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Tstate+0x1>
 3d8:	88 30       	cpi	r24, 0x08	; 8
 3da:	91 05       	cpc	r25, r1
 3dc:	a4 f5       	brge	.+104    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3de:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <data>
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	01 96       	adiw	r24, 0x01	; 1
 3e6:	a9 01       	movw	r20, r18
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <TickFct_Leader+0xfc>
 3ea:	44 0f       	add	r20, r20
 3ec:	55 1f       	adc	r21, r21
 3ee:	8a 95       	dec	r24
 3f0:	e2 f7       	brpl	.-8      	; 0x3ea <TickFct_Leader+0xf8>
 3f2:	4b b9       	out	0x0b, r20	; 11
 3f4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Tstate>
 3f8:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Tstate+0x1>
 3fc:	01 96       	adiw	r24, 0x01	; 1
 3fe:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <Tstate+0x1>
 402:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <Tstate>
 406:	21 c0       	rjmp	.+66     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 408:	82 e0       	ldi	r24, 0x02	; 2
 40a:	8b b9       	out	0x0b, r24	; 11
 40c:	84 e0       	ldi	r24, 0x04	; 4
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	50 df       	rcall	.-352    	; 0x2b2 <Timer>
 412:	88 23       	and	r24, r24
 414:	d1 f0       	breq	.+52     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 416:	c0 e0       	ldi	r28, 0x00	; 0
 418:	d0 e0       	ldi	r29, 0x00	; 0
 41a:	17 c0       	rjmp	.+46     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 41c:	01 96       	adiw	r24, 0x01	; 1
 41e:	a9 f4       	brne	.+42     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 420:	82 e0       	ldi	r24, 0x02	; 2
 422:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 426:	11 c0       	rjmp	.+34     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 428:	c0 e0       	ldi	r28, 0x00	; 0
 42a:	d0 e0       	ldi	r29, 0x00	; 0
 42c:	0e c0       	rjmp	.+28     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 42e:	c0 e0       	ldi	r28, 0x00	; 0
 430:	d0 e0       	ldi	r29, 0x00	; 0
 432:	0b c0       	rjmp	.+22     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 434:	c3 e0       	ldi	r28, 0x03	; 3
 436:	d0 e0       	ldi	r29, 0x00	; 0
 438:	08 c0       	rjmp	.+16     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43a:	c4 e0       	ldi	r28, 0x04	; 4
 43c:	d0 e0       	ldi	r29, 0x00	; 0
 43e:	05 c0       	rjmp	.+10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 440:	c6 e0       	ldi	r28, 0x06	; 6
 442:	d0 e0       	ldi	r29, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 446:	c7 e0       	ldi	r28, 0x07	; 7
 448:	d0 e0       	ldi	r29, 0x00	; 0
 44a:	ce 01       	movw	r24, r28
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	08 95       	ret

00000452 <main>:
	return state;
}


int main(void)
{
 452:	cf 93       	push	r28
 454:	df 93       	push	r29
 456:	cd b7       	in	r28, 0x3d	; 61
 458:	de b7       	in	r29, 0x3e	; 62
 45a:	2b 97       	sbiw	r28, 0x0b	; 11
 45c:	0f b6       	in	r0, 0x3f	; 63
 45e:	f8 94       	cli
 460:	de bf       	out	0x3e, r29	; 62
 462:	0f be       	out	0x3f, r0	; 63
 464:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF; PORTA = 0x00;
 466:	8f ef       	ldi	r24, 0xFF	; 255
 468:	81 b9       	out	0x01, r24	; 1
 46a:	12 b8       	out	0x02, r1	; 2
	
	DDRD = 0xFE; PORTD = 0x00;
 46c:	9e ef       	ldi	r25, 0xFE	; 254
 46e:	9a b9       	out	0x0a, r25	; 10
 470:	1b b8       	out	0x0b, r1	; 11
	
	//Set_Clock(500);
	tasksNum = 1;
 472:	91 e0       	ldi	r25, 0x01	; 1
 474:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksNum>
	task tsks[1];
	tasks = tsks;
 478:	9e 01       	movw	r18, r28
 47a:	2f 5f       	subi	r18, 0xFF	; 255
 47c:	3f 4f       	sbci	r19, 0xFF	; 255
 47e:	30 93 12 01 	sts	0x0112, r19	; 0x800112 <tasks+0x1>
 482:	20 93 11 01 	sts	0x0111, r18	; 0x800111 <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = -1;
 486:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].period = 1;
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	a0 e0       	ldi	r26, 0x00	; 0
 48e:	b0 e0       	ldi	r27, 0x00	; 0
 490:	8a 83       	std	Y+2, r24	; 0x02
 492:	9b 83       	std	Y+3, r25	; 0x03
 494:	ac 83       	std	Y+4, r26	; 0x04
 496:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 498:	8e 83       	std	Y+6, r24	; 0x06
 49a:	9f 83       	std	Y+7, r25	; 0x07
 49c:	a8 87       	std	Y+8, r26	; 0x08
 49e:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 4a0:	89 e7       	ldi	r24, 0x79	; 121
 4a2:	91 e0       	ldi	r25, 0x01	; 1
 4a4:	9b 87       	std	Y+11, r25	; 0x0b
 4a6:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	cb de       	rcall	.-618    	; 0x248 <TimerSet>
	TimerOn();
 4b2:	db de       	rcall	.-586    	; 0x26a <TimerOn>
 4b4:	ff cf       	rjmp	.-2      	; 0x4b4 <main+0x62>

000004b6 <__tablejump2__>:
 4b6:	ee 0f       	add	r30, r30
 4b8:	ff 1f       	adc	r31, r31
 4ba:	00 24       	eor	r0, r0
 4bc:	00 1c       	adc	r0, r0
 4be:	0b be       	out	0x3b, r0	; 59
 4c0:	07 90       	elpm	r0, Z+
 4c2:	f6 91       	elpm	r31, Z
 4c4:	e0 2d       	mov	r30, r0
 4c6:	09 94       	ijmp

000004c8 <_exit>:
 4c8:	f8 94       	cli

000004ca <__stop_program>:
 4ca:	ff cf       	rjmp	.-2      	; 0x4ca <__stop_program>
