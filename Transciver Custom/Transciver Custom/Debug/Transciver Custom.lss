
Transciver Custom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000004f6  0000058a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800104  00800104  0000058e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000058e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bc0  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000094a  00000000  00000000  00001218  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a6  00000000  00000000  00001b62  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00002008  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051e  00000000  00000000  00002124  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000042f  00000000  00000000  00002642  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002a71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4e c0       	rjmp	.+156    	; 0x9e <__ctors_end>
   2:	00 00       	nop
   4:	69 c0       	rjmp	.+210    	; 0xd8 <__bad_interrupt>
   6:	00 00       	nop
   8:	67 c0       	rjmp	.+206    	; 0xd8 <__bad_interrupt>
   a:	00 00       	nop
   c:	65 c0       	rjmp	.+202    	; 0xd8 <__bad_interrupt>
   e:	00 00       	nop
  10:	63 c0       	rjmp	.+198    	; 0xd8 <__bad_interrupt>
  12:	00 00       	nop
  14:	61 c0       	rjmp	.+194    	; 0xd8 <__bad_interrupt>
  16:	00 00       	nop
  18:	5f c0       	rjmp	.+190    	; 0xd8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5d c0       	rjmp	.+186    	; 0xd8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5b c0       	rjmp	.+182    	; 0xd8 <__bad_interrupt>
  22:	00 00       	nop
  24:	59 c0       	rjmp	.+178    	; 0xd8 <__bad_interrupt>
  26:	00 00       	nop
  28:	57 c0       	rjmp	.+174    	; 0xd8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	55 c0       	rjmp	.+170    	; 0xd8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	53 c0       	rjmp	.+166    	; 0xd8 <__bad_interrupt>
  32:	00 00       	nop
  34:	bb c0       	rjmp	.+374    	; 0x1ac <__vector_13>
  36:	00 00       	nop
  38:	4f c0       	rjmp	.+158    	; 0xd8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4d c0       	rjmp	.+154    	; 0xd8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4b c0       	rjmp	.+150    	; 0xd8 <__bad_interrupt>
  42:	00 00       	nop
  44:	49 c0       	rjmp	.+146    	; 0xd8 <__bad_interrupt>
  46:	00 00       	nop
  48:	47 c0       	rjmp	.+142    	; 0xd8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	45 c0       	rjmp	.+138    	; 0xd8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	43 c0       	rjmp	.+134    	; 0xd8 <__bad_interrupt>
  52:	00 00       	nop
  54:	41 c0       	rjmp	.+130    	; 0xd8 <__bad_interrupt>
  56:	00 00       	nop
  58:	3f c0       	rjmp	.+126    	; 0xd8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3d c0       	rjmp	.+122    	; 0xd8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3b c0       	rjmp	.+118    	; 0xd8 <__bad_interrupt>
  62:	00 00       	nop
  64:	39 c0       	rjmp	.+114    	; 0xd8 <__bad_interrupt>
  66:	00 00       	nop
  68:	37 c0       	rjmp	.+110    	; 0xd8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	35 c0       	rjmp	.+106    	; 0xd8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	33 c0       	rjmp	.+102    	; 0xd8 <__bad_interrupt>
  72:	00 00       	nop
  74:	31 c0       	rjmp	.+98     	; 0xd8 <__bad_interrupt>
  76:	00 00       	nop
  78:	2f c0       	rjmp	.+94     	; 0xd8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2d c0       	rjmp	.+90     	; 0xd8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2b c0       	rjmp	.+86     	; 0xd8 <__bad_interrupt>
  82:	00 00       	nop
  84:	29 c0       	rjmp	.+82     	; 0xd8 <__bad_interrupt>
  86:	00 00       	nop
  88:	27 c0       	rjmp	.+78     	; 0xd8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	85 01       	movw	r16, r10
  8e:	88 01       	movw	r16, r16
  90:	96 01       	movw	r18, r12
  92:	a3 01       	movw	r20, r6
  94:	c4 01       	movw	r24, r8
  96:	cf 01       	movw	r24, r30
  98:	e5 01       	movw	r28, r10
  9a:	fe 01       	movw	r30, r28
  9c:	1f 02       	muls	r17, r31

0000009e <__ctors_end>:
  9e:	11 24       	eor	r1, r1
  a0:	1f be       	out	0x3f, r1	; 63
  a2:	cf ef       	ldi	r28, 0xFF	; 255
  a4:	d0 e4       	ldi	r29, 0x40	; 64
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
  aa:	11 e0       	ldi	r17, 0x01	; 1
  ac:	a0 e0       	ldi	r26, 0x00	; 0
  ae:	b1 e0       	ldi	r27, 0x01	; 1
  b0:	e6 ef       	ldi	r30, 0xF6	; 246
  b2:	f4 e0       	ldi	r31, 0x04	; 4
  b4:	00 e0       	ldi	r16, 0x00	; 0
  b6:	0b bf       	out	0x3b, r16	; 59
  b8:	02 c0       	rjmp	.+4      	; 0xbe <__do_copy_data+0x14>
  ba:	07 90       	elpm	r0, Z+
  bc:	0d 92       	st	X+, r0
  be:	a4 30       	cpi	r26, 0x04	; 4
  c0:	b1 07       	cpc	r27, r17
  c2:	d9 f7       	brne	.-10     	; 0xba <__do_copy_data+0x10>

000000c4 <__do_clear_bss>:
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	a4 e0       	ldi	r26, 0x04	; 4
  c8:	b1 e0       	ldi	r27, 0x01	; 1
  ca:	01 c0       	rjmp	.+2      	; 0xce <.do_clear_bss_start>

000000cc <.do_clear_bss_loop>:
  cc:	1d 92       	st	X+, r1

000000ce <.do_clear_bss_start>:
  ce:	a1 31       	cpi	r26, 0x11	; 17
  d0:	b2 07       	cpc	r27, r18
  d2:	e1 f7       	brne	.-8      	; 0xcc <.do_clear_bss_loop>
  d4:	d3 d1       	rcall	.+934    	; 0x47c <main>
  d6:	0d c2       	rjmp	.+1050   	; 0x4f2 <_exit>

000000d8 <__bad_interrupt>:
  d8:	93 cf       	rjmp	.-218    	; 0x0 <__vectors>

000000da <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  da:	cf 92       	push	r12
  dc:	df 92       	push	r13
  de:	ef 92       	push	r14
  e0:	ff 92       	push	r15
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  ec:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <tasksNum>
  f0:	88 23       	and	r24, r24
  f2:	09 f4       	brne	.+2      	; 0xf6 <TimerISR+0x1c>
  f4:	53 c0       	rjmp	.+166    	; 0x19c <TimerISR+0xc2>
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	1b e0       	ldi	r17, 0x0B	; 11
  fa:	c0 91 0f 01 	lds	r28, 0x010F	; 0x80010f <tasks>
  fe:	d0 91 10 01 	lds	r29, 0x0110	; 0x800110 <tasks+0x1>
 102:	18 9f       	mul	r17, r24
 104:	c0 0d       	add	r28, r0
 106:	d1 1d       	adc	r29, r1
 108:	11 24       	eor	r1, r1
 10a:	4d 81       	ldd	r20, Y+5	; 0x05
 10c:	5e 81       	ldd	r21, Y+6	; 0x06
 10e:	6f 81       	ldd	r22, Y+7	; 0x07
 110:	78 85       	ldd	r23, Y+8	; 0x08
 112:	89 81       	ldd	r24, Y+1	; 0x01
 114:	9a 81       	ldd	r25, Y+2	; 0x02
 116:	ab 81       	ldd	r26, Y+3	; 0x03
 118:	bc 81       	ldd	r27, Y+4	; 0x04
 11a:	48 17       	cp	r20, r24
 11c:	59 07       	cpc	r21, r25
 11e:	6a 07       	cpc	r22, r26
 120:	7b 07       	cpc	r23, r27
 122:	b0 f0       	brcs	.+44     	; 0x150 <TimerISR+0x76>
 124:	88 81       	ld	r24, Y
 126:	e9 85       	ldd	r30, Y+9	; 0x09
 128:	fa 85       	ldd	r31, Y+10	; 0x0a
 12a:	08 2e       	mov	r0, r24
 12c:	00 0c       	add	r0, r0
 12e:	99 0b       	sbc	r25, r25
 130:	09 95       	icall
 132:	88 83       	st	Y, r24
 134:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 138:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <tasks>
 13c:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <tasks+0x1>
 140:	18 9f       	mul	r17, r24
 142:	e0 0d       	add	r30, r0
 144:	f1 1d       	adc	r31, r1
 146:	11 24       	eor	r1, r1
 148:	15 82       	std	Z+5, r1	; 0x05
 14a:	16 82       	std	Z+6, r1	; 0x06
 14c:	17 82       	std	Z+7, r1	; 0x07
 14e:	10 86       	std	Z+8, r1	; 0x08
 150:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 154:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <tasks>
 158:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <tasks+0x1>
 15c:	18 9f       	mul	r17, r24
 15e:	e0 0d       	add	r30, r0
 160:	f1 1d       	adc	r31, r1
 162:	11 24       	eor	r1, r1
 164:	c5 80       	ldd	r12, Z+5	; 0x05
 166:	d6 80       	ldd	r13, Z+6	; 0x06
 168:	e7 80       	ldd	r14, Z+7	; 0x07
 16a:	f0 84       	ldd	r15, Z+8	; 0x08
 16c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 170:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 174:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 178:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 17c:	4c 0d       	add	r20, r12
 17e:	5d 1d       	adc	r21, r13
 180:	6e 1d       	adc	r22, r14
 182:	7f 1d       	adc	r23, r15
 184:	45 83       	std	Z+5, r20	; 0x05
 186:	56 83       	std	Z+6, r21	; 0x06
 188:	67 83       	std	Z+7, r22	; 0x07
 18a:	70 87       	std	Z+8, r23	; 0x08
 18c:	8f 5f       	subi	r24, 0xFF	; 255
 18e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 192:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <tasksNum>
 196:	89 17       	cp	r24, r25
 198:	08 f4       	brcc	.+2      	; 0x19c <TimerISR+0xc2>
 19a:	af cf       	rjmp	.-162    	; 0xfa <TimerISR+0x20>
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	ff 90       	pop	r15
 1a4:	ef 90       	pop	r14
 1a6:	df 90       	pop	r13
 1a8:	cf 90       	pop	r12
 1aa:	08 95       	ret

000001ac <__vector_13>:
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	0b b6       	in	r0, 0x3b	; 59
 1b8:	0f 92       	push	r0
 1ba:	2f 93       	push	r18
 1bc:	3f 93       	push	r19
 1be:	4f 93       	push	r20
 1c0:	5f 93       	push	r21
 1c2:	6f 93       	push	r22
 1c4:	7f 93       	push	r23
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	ef 93       	push	r30
 1d0:	ff 93       	push	r31
 1d2:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <tasksPeriodCntDown>
 1d6:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <tasksPeriodCntDown+0x1>
 1da:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <tasksPeriodCntDown+0x2>
 1de:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <tasksPeriodCntDown+0x3>
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	a1 09       	sbc	r26, r1
 1e6:	b1 09       	sbc	r27, r1
 1e8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 1ec:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 1f0:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 1f4:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 1f8:	89 2b       	or	r24, r25
 1fa:	8a 2b       	or	r24, r26
 1fc:	8b 2b       	or	r24, r27
 1fe:	89 f4       	brne	.+34     	; 0x222 <__vector_13+0x76>
 200:	6c df       	rcall	.-296    	; 0xda <TimerISR>
 202:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 206:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 20a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 20e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 212:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 216:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 21a:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 21e:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 222:	ff 91       	pop	r31
 224:	ef 91       	pop	r30
 226:	bf 91       	pop	r27
 228:	af 91       	pop	r26
 22a:	9f 91       	pop	r25
 22c:	8f 91       	pop	r24
 22e:	7f 91       	pop	r23
 230:	6f 91       	pop	r22
 232:	5f 91       	pop	r21
 234:	4f 91       	pop	r20
 236:	3f 91       	pop	r19
 238:	2f 91       	pop	r18
 23a:	0f 90       	pop	r0
 23c:	0b be       	out	0x3b, r0	; 59
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <TimerSet>:
 248:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 24c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 250:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 254:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 258:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <tasksPeriodCntDown>
 25c:	70 93 0c 01 	sts	0x010C, r23	; 0x80010c <tasksPeriodCntDown+0x1>
 260:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksPeriodCntDown+0x2>
 264:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <tasksPeriodCntDown+0x3>
 268:	08 95       	ret

0000026a <TimerOn>:
 26a:	8b e0       	ldi	r24, 0x0B	; 11
 26c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 270:	87 e0       	ldi	r24, 0x07	; 7
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 278:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 27c:	82 e0       	ldi	r24, 0x02	; 2
 27e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 282:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 286:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 28a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 28e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 292:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 296:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 29a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 29e:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 2a2:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 2a6:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 2aa:	8f b7       	in	r24, 0x3f	; 63
 2ac:	80 68       	ori	r24, 0x80	; 128
 2ae:	8f bf       	out	0x3f, r24	; 63
 2b0:	08 95       	ret

000002b2 <Timer>:
 2b2:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <time>
 2b6:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <time+0x1>
 2ba:	21 15       	cp	r18, r1
 2bc:	31 05       	cpc	r19, r1
 2be:	41 f4       	brne	.+16     	; 0x2d0 <Timer+0x1e>
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <time+0x1>
 2c8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <time>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	08 95       	ret
 2d0:	28 17       	cp	r18, r24
 2d2:	39 07       	cpc	r19, r25
 2d4:	30 f0       	brcs	.+12     	; 0x2e2 <Timer+0x30>
 2d6:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time+0x1>
 2da:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <time>
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	08 95       	ret
 2e2:	2f 5f       	subi	r18, 0xFF	; 255
 2e4:	3f 4f       	sbci	r19, 0xFF	; 255
 2e6:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <time+0x1>
 2ea:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <time>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	08 95       	ret

000002f2 <TickFct_Leader>:
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	ec 01       	movw	r28, r24
 2f8:	fc 01       	movw	r30, r24
 2fa:	31 96       	adiw	r30, 0x01	; 1
 2fc:	e9 30       	cpi	r30, 0x09	; 9
 2fe:	f1 05       	cpc	r31, r1
 300:	08 f0       	brcs	.+2      	; 0x304 <TickFct_Leader+0x12>
 302:	b8 c0       	rjmp	.+368    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 304:	ea 5b       	subi	r30, 0xBA	; 186
 306:	ff 4f       	sbci	r31, 0xFF	; 255
 308:	eb c0       	rjmp	.+470    	; 0x4e0 <__tablejump2__>
 30a:	c0 e0       	ldi	r28, 0x00	; 0
 30c:	d0 e0       	ldi	r29, 0x00	; 0
 30e:	b2 c0       	rjmp	.+356    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 310:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 314:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 318:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 31c:	58 9b       	sbis	0x0b, 0	; 11
 31e:	aa c0       	rjmp	.+340    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	c6 df       	rcall	.-116    	; 0x2b2 <Timer>
 326:	c8 2f       	mov	r28, r24
 328:	d0 e0       	ldi	r29, 0x00	; 0
 32a:	a4 c0       	rjmp	.+328    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 32c:	84 e0       	ldi	r24, 0x04	; 4
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	c0 df       	rcall	.-128    	; 0x2b2 <Timer>
 332:	88 23       	and	r24, r24
 334:	09 f4       	brne	.+2      	; 0x338 <TickFct_Leader+0x46>
 336:	9e c0       	rjmp	.+316    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 338:	58 9b       	sbis	0x0b, 0	; 11
 33a:	8b c0       	rjmp	.+278    	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 33c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 340:	c2 e0       	ldi	r28, 0x02	; 2
 342:	d0 e0       	ldi	r29, 0x00	; 0
 344:	97 c0       	rjmp	.+302    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 346:	84 e0       	ldi	r24, 0x04	; 4
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	b3 df       	rcall	.-154    	; 0x2b2 <Timer>
 34c:	88 23       	and	r24, r24
 34e:	09 f4       	brne	.+2      	; 0x352 <TickFct_Leader+0x60>
 350:	91 c0       	rjmp	.+290    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 352:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 356:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 35a:	88 30       	cpi	r24, 0x08	; 8
 35c:	91 05       	cpc	r25, r1
 35e:	0c f0       	brlt	.+2      	; 0x362 <TickFct_Leader+0x70>
 360:	7b c0       	rjmp	.+246    	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 362:	2b b1       	in	r18, 0x0b	; 11
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	08 2e       	mov	r0, r24
 368:	02 c0       	rjmp	.+4      	; 0x36e <TickFct_Leader+0x7c>
 36a:	22 0f       	add	r18, r18
 36c:	33 1f       	adc	r19, r19
 36e:	0a 94       	dec	r0
 370:	e2 f7       	brpl	.-8      	; 0x36a <TickFct_Leader+0x78>
 372:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <data>
 376:	23 2b       	or	r18, r19
 378:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 382:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 386:	76 c0       	rjmp	.+236    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 388:	84 e0       	ldi	r24, 0x04	; 4
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	92 df       	rcall	.-220    	; 0x2b2 <Timer>
 38e:	88 23       	and	r24, r24
 390:	09 f4       	brne	.+2      	; 0x394 <TickFct_Leader+0xa2>
 392:	70 c0       	rjmp	.+224    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 394:	58 99       	sbic	0x0b, 0	; 11
 396:	63 c0       	rjmp	.+198    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 398:	c0 e0       	ldi	r28, 0x00	; 0
 39a:	d0 e0       	ldi	r29, 0x00	; 0
 39c:	6b c0       	rjmp	.+214    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 39e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3a2:	88 23       	and	r24, r24
 3a4:	09 f4       	brne	.+2      	; 0x3a8 <TickFct_Leader+0xb6>
 3a6:	5e c0       	rjmp	.+188    	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 3a8:	80 7c       	andi	r24, 0xC0	; 192
 3aa:	31 f4       	brne	.+12     	; 0x3b8 <TickFct_Leader+0xc6>
 3ac:	81 e4       	ldi	r24, 0x41	; 65
 3ae:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3b2:	c5 e0       	ldi	r28, 0x05	; 5
 3b4:	d0 e0       	ldi	r29, 0x00	; 0
 3b6:	5e c0       	rjmp	.+188    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 3b8:	80 38       	cpi	r24, 0x80	; 128
 3ba:	09 f0       	breq	.+2      	; 0x3be <TickFct_Leader+0xcc>
 3bc:	5b c0       	rjmp	.+182    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 3be:	81 ec       	ldi	r24, 0xC1	; 193
 3c0:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3c4:	c5 e0       	ldi	r28, 0x05	; 5
 3c6:	d0 e0       	ldi	r29, 0x00	; 0
 3c8:	55 c0       	rjmp	.+170    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 3ca:	84 e0       	ldi	r24, 0x04	; 4
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	71 df       	rcall	.-286    	; 0x2b2 <Timer>
 3d0:	88 23       	and	r24, r24
 3d2:	09 f4       	brne	.+2      	; 0x3d6 <TickFct_Leader+0xe4>
 3d4:	4f c0       	rjmp	.+158    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 3d6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 3da:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 3de:	02 97       	sbiw	r24, 0x02	; 2
 3e0:	0c f0       	brlt	.+2      	; 0x3e4 <TickFct_Leader+0xf2>
 3e2:	43 c0       	rjmp	.+134    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 3e4:	82 e0       	ldi	r24, 0x02	; 2
 3e6:	8b b9       	out	0x0b, r24	; 11
 3e8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 3ec:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 3f6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 3fa:	3c c0       	rjmp	.+120    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 3fc:	84 e0       	ldi	r24, 0x04	; 4
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	58 df       	rcall	.-336    	; 0x2b2 <Timer>
 402:	88 23       	and	r24, r24
 404:	b9 f1       	breq	.+110    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 406:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 40a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 40e:	88 30       	cpi	r24, 0x08	; 8
 410:	91 05       	cpc	r25, r1
 412:	74 f5       	brge	.+92     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 414:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data>
 418:	30 e0       	ldi	r19, 0x00	; 0
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	a9 01       	movw	r20, r18
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 420:	44 0f       	add	r20, r20
 422:	55 1f       	adc	r21, r21
 424:	8a 95       	dec	r24
 426:	e2 f7       	brpl	.-8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 428:	4b b9       	out	0x0b, r20	; 11
 42a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 42e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 432:	01 96       	adiw	r24, 0x01	; 1
 434:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 438:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 43c:	1b c0       	rjmp	.+54     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 43e:	82 e0       	ldi	r24, 0x02	; 2
 440:	8b b9       	out	0x0b, r24	; 11
 442:	84 e0       	ldi	r24, 0x04	; 4
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	35 df       	rcall	.-406    	; 0x2b2 <Timer>
 448:	88 23       	and	r24, r24
 44a:	a1 f0       	breq	.+40     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 44c:	c0 e0       	ldi	r28, 0x00	; 0
 44e:	d0 e0       	ldi	r29, 0x00	; 0
 450:	11 c0       	rjmp	.+34     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 452:	c0 e0       	ldi	r28, 0x00	; 0
 454:	d0 e0       	ldi	r29, 0x00	; 0
 456:	0e c0       	rjmp	.+28     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 458:	c3 e0       	ldi	r28, 0x03	; 3
 45a:	d0 e0       	ldi	r29, 0x00	; 0
 45c:	0b c0       	rjmp	.+22     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 45e:	c4 e0       	ldi	r28, 0x04	; 4
 460:	d0 e0       	ldi	r29, 0x00	; 0
 462:	08 c0       	rjmp	.+16     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 464:	c0 e0       	ldi	r28, 0x00	; 0
 466:	d0 e0       	ldi	r29, 0x00	; 0
 468:	05 c0       	rjmp	.+10     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46a:	c6 e0       	ldi	r28, 0x06	; 6
 46c:	d0 e0       	ldi	r29, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 470:	c7 e0       	ldi	r28, 0x07	; 7
 472:	d0 e0       	ldi	r29, 0x00	; 0
 474:	ce 01       	movw	r24, r28
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	08 95       	ret

0000047c <main>:
	return state;
}


int main(void)
{
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62
 484:	2b 97       	sbiw	r28, 0x0b	; 11
 486:	0f b6       	in	r0, 0x3f	; 63
 488:	f8 94       	cli
 48a:	de bf       	out	0x3e, r29	; 62
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF; PORTA = 0x00;
 490:	8f ef       	ldi	r24, 0xFF	; 255
 492:	81 b9       	out	0x01, r24	; 1
 494:	12 b8       	out	0x02, r1	; 2
	
	DDRD = 0xFE; PORTD = 0x01;
 496:	9e ef       	ldi	r25, 0xFE	; 254
 498:	9a b9       	out	0x0a, r25	; 10
 49a:	91 e0       	ldi	r25, 0x01	; 1
 49c:	9b b9       	out	0x0b, r25	; 11
	
	//Set_Clock(500);
	tasksNum = 1;
 49e:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tasksNum>
	task tsks[1];
	tasks = tsks;
 4a2:	9e 01       	movw	r18, r28
 4a4:	2f 5f       	subi	r18, 0xFF	; 255
 4a6:	3f 4f       	sbci	r19, 0xFF	; 255
 4a8:	30 93 10 01 	sts	0x0110, r19	; 0x800110 <tasks+0x1>
 4ac:	20 93 0f 01 	sts	0x010F, r18	; 0x80010f <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = -1;
 4b0:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].period = 1;
 4b2:	81 e0       	ldi	r24, 0x01	; 1
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	a0 e0       	ldi	r26, 0x00	; 0
 4b8:	b0 e0       	ldi	r27, 0x00	; 0
 4ba:	8a 83       	std	Y+2, r24	; 0x02
 4bc:	9b 83       	std	Y+3, r25	; 0x03
 4be:	ac 83       	std	Y+4, r26	; 0x04
 4c0:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 4c2:	8e 83       	std	Y+6, r24	; 0x06
 4c4:	9f 83       	std	Y+7, r25	; 0x07
 4c6:	a8 87       	std	Y+8, r26	; 0x08
 4c8:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 4ca:	89 e7       	ldi	r24, 0x79	; 121
 4cc:	91 e0       	ldi	r25, 0x01	; 1
 4ce:	9b 87       	std	Y+11, r25	; 0x0b
 4d0:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 4d2:	61 e0       	ldi	r22, 0x01	; 1
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	80 e0       	ldi	r24, 0x00	; 0
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	b6 de       	rcall	.-660    	; 0x248 <TimerSet>
	TimerOn();
 4dc:	c6 de       	rcall	.-628    	; 0x26a <TimerOn>
 4de:	ff cf       	rjmp	.-2      	; 0x4de <main+0x62>

000004e0 <__tablejump2__>:
 4e0:	ee 0f       	add	r30, r30
 4e2:	ff 1f       	adc	r31, r31
 4e4:	00 24       	eor	r0, r0
 4e6:	00 1c       	adc	r0, r0
 4e8:	0b be       	out	0x3b, r0	; 59
 4ea:	07 90       	elpm	r0, Z+
 4ec:	f6 91       	elpm	r31, Z
 4ee:	e0 2d       	mov	r30, r0
 4f0:	09 94       	ijmp

000004f2 <_exit>:
 4f2:	f8 94       	cli

000004f4 <__stop_program>:
 4f4:	ff cf       	rjmp	.-2      	; 0x4f4 <__stop_program>
