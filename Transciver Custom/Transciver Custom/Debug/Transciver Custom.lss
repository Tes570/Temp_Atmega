
Transciver Custom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000572  00000606  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000572  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800104  00800104  0000060a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000060a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000063c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c51  00000000  00000000  000006ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c3  00000000  00000000  0000133d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c2  00000000  00000000  00001d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  000022c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000558  00000000  00000000  00002410  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000501  00000000  00000000  00002968  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002e69  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	50 c0       	rjmp	.+160    	; 0xa2 <__ctors_end>
   2:	00 00       	nop
   4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
   6:	00 00       	nop
   8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
   a:	00 00       	nop
   c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
   e:	00 00       	nop
  10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
  12:	00 00       	nop
  14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
  16:	00 00       	nop
  18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
  1e:	00 00       	nop
  20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
  22:	00 00       	nop
  24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
  26:	00 00       	nop
  28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
  2e:	00 00       	nop
  30:	55 c0       	rjmp	.+170    	; 0xdc <__bad_interrupt>
  32:	00 00       	nop
  34:	bd c0       	rjmp	.+378    	; 0x1b0 <__vector_13>
  36:	00 00       	nop
  38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4f c0       	rjmp	.+158    	; 0xdc <__bad_interrupt>
  3e:	00 00       	nop
  40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
  42:	00 00       	nop
  44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
  46:	00 00       	nop
  48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
  4e:	00 00       	nop
  50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
  52:	00 00       	nop
  54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
  56:	00 00       	nop
  58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
  5e:	00 00       	nop
  60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
  62:	00 00       	nop
  64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
  66:	00 00       	nop
  68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
  6e:	00 00       	nop
  70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
  72:	00 00       	nop
  74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
  76:	00 00       	nop
  78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
  7e:	00 00       	nop
  80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
  82:	00 00       	nop
  84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
  86:	00 00       	nop
  88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	87 01       	movw	r16, r14
  8e:	8b 01       	movw	r16, r22
  90:	97 01       	movw	r18, r14
  92:	aa 01       	movw	r20, r20
  94:	da 01       	movw	r26, r20
  96:	fc 01       	movw	r30, r24
  98:	22 02       	muls	r18, r18
  9a:	4d 02       	muls	r20, r29
  9c:	6f 02       	muls	r22, r31
  9e:	6f 02       	muls	r22, r31
  a0:	58 02       	muls	r21, r24

000000a2 <__ctors_end>:
  a2:	11 24       	eor	r1, r1
  a4:	1f be       	out	0x3f, r1	; 63
  a6:	cf ef       	ldi	r28, 0xFF	; 255
  a8:	d0 e4       	ldi	r29, 0x40	; 64
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	cd bf       	out	0x3d, r28	; 61

000000ae <__do_copy_data>:
  ae:	11 e0       	ldi	r17, 0x01	; 1
  b0:	a0 e0       	ldi	r26, 0x00	; 0
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	e2 e7       	ldi	r30, 0x72	; 114
  b6:	f5 e0       	ldi	r31, 0x05	; 5
  b8:	00 e0       	ldi	r16, 0x00	; 0
  ba:	0b bf       	out	0x3b, r16	; 59
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x14>
  be:	07 90       	elpm	r0, Z+
  c0:	0d 92       	st	X+, r0
  c2:	a4 30       	cpi	r26, 0x04	; 4
  c4:	b1 07       	cpc	r27, r17
  c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x10>

000000c8 <__do_clear_bss>:
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	a4 e0       	ldi	r26, 0x04	; 4
  cc:	b1 e0       	ldi	r27, 0x01	; 1
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
  d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
  d2:	a2 31       	cpi	r26, 0x12	; 18
  d4:	b2 07       	cpc	r27, r18
  d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
  d8:	0d d2       	rcall	.+1050   	; 0x4f4 <main>
  da:	49 c2       	rjmp	.+1170   	; 0x56e <_exit>

000000dc <__bad_interrupt>:
  dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  de:	cf 92       	push	r12
  e0:	df 92       	push	r13
  e2:	ef 92       	push	r14
  e4:	ff 92       	push	r15
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  f0:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <tasksNum>
  f4:	88 23       	and	r24, r24
  f6:	09 f4       	brne	.+2      	; 0xfa <TimerISR+0x1c>
  f8:	53 c0       	rjmp	.+166    	; 0x1a0 <TimerISR+0xc2>
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	1b e0       	ldi	r17, 0x0B	; 11
  fe:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <tasks>
 102:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <tasks+0x1>
 106:	18 9f       	mul	r17, r24
 108:	c0 0d       	add	r28, r0
 10a:	d1 1d       	adc	r29, r1
 10c:	11 24       	eor	r1, r1
 10e:	4d 81       	ldd	r20, Y+5	; 0x05
 110:	5e 81       	ldd	r21, Y+6	; 0x06
 112:	6f 81       	ldd	r22, Y+7	; 0x07
 114:	78 85       	ldd	r23, Y+8	; 0x08
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	9a 81       	ldd	r25, Y+2	; 0x02
 11a:	ab 81       	ldd	r26, Y+3	; 0x03
 11c:	bc 81       	ldd	r27, Y+4	; 0x04
 11e:	48 17       	cp	r20, r24
 120:	59 07       	cpc	r21, r25
 122:	6a 07       	cpc	r22, r26
 124:	7b 07       	cpc	r23, r27
 126:	b0 f0       	brcs	.+44     	; 0x154 <TimerISR+0x76>
 128:	88 81       	ld	r24, Y
 12a:	e9 85       	ldd	r30, Y+9	; 0x09
 12c:	fa 85       	ldd	r31, Y+10	; 0x0a
 12e:	08 2e       	mov	r0, r24
 130:	00 0c       	add	r0, r0
 132:	99 0b       	sbc	r25, r25
 134:	09 95       	icall
 136:	88 83       	st	Y, r24
 138:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 13c:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <tasks>
 140:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <tasks+0x1>
 144:	18 9f       	mul	r17, r24
 146:	e0 0d       	add	r30, r0
 148:	f1 1d       	adc	r31, r1
 14a:	11 24       	eor	r1, r1
 14c:	15 82       	std	Z+5, r1	; 0x05
 14e:	16 82       	std	Z+6, r1	; 0x06
 150:	17 82       	std	Z+7, r1	; 0x07
 152:	10 86       	std	Z+8, r1	; 0x08
 154:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 158:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <tasks>
 15c:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <tasks+0x1>
 160:	18 9f       	mul	r17, r24
 162:	e0 0d       	add	r30, r0
 164:	f1 1d       	adc	r31, r1
 166:	11 24       	eor	r1, r1
 168:	c5 80       	ldd	r12, Z+5	; 0x05
 16a:	d6 80       	ldd	r13, Z+6	; 0x06
 16c:	e7 80       	ldd	r14, Z+7	; 0x07
 16e:	f0 84       	ldd	r15, Z+8	; 0x08
 170:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 174:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 178:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 17c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 180:	4c 0d       	add	r20, r12
 182:	5d 1d       	adc	r21, r13
 184:	6e 1d       	adc	r22, r14
 186:	7f 1d       	adc	r23, r15
 188:	45 83       	std	Z+5, r20	; 0x05
 18a:	56 83       	std	Z+6, r21	; 0x06
 18c:	67 83       	std	Z+7, r22	; 0x07
 18e:	70 87       	std	Z+8, r23	; 0x08
 190:	8f 5f       	subi	r24, 0xFF	; 255
 192:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 196:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <tasksNum>
 19a:	89 17       	cp	r24, r25
 19c:	08 f4       	brcc	.+2      	; 0x1a0 <TimerISR+0xc2>
 19e:	af cf       	rjmp	.-162    	; 0xfe <TimerISR+0x20>
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	1f 91       	pop	r17
 1a6:	ff 90       	pop	r15
 1a8:	ef 90       	pop	r14
 1aa:	df 90       	pop	r13
 1ac:	cf 90       	pop	r12
 1ae:	08 95       	ret

000001b0 <__vector_13>:
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	0b b6       	in	r0, 0x3b	; 59
 1bc:	0f 92       	push	r0
 1be:	2f 93       	push	r18
 1c0:	3f 93       	push	r19
 1c2:	4f 93       	push	r20
 1c4:	5f 93       	push	r21
 1c6:	6f 93       	push	r22
 1c8:	7f 93       	push	r23
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
 1d6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <tasksPeriodCntDown>
 1da:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <tasksPeriodCntDown+0x1>
 1de:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <tasksPeriodCntDown+0x2>
 1e2:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <tasksPeriodCntDown+0x3>
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	a1 09       	sbc	r26, r1
 1ea:	b1 09       	sbc	r27, r1
 1ec:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 1f0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 1f4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 1f8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 1fc:	89 2b       	or	r24, r25
 1fe:	8a 2b       	or	r24, r26
 200:	8b 2b       	or	r24, r27
 202:	89 f4       	brne	.+34     	; 0x226 <__vector_13+0x76>
 204:	6c df       	rcall	.-296    	; 0xde <TimerISR>
 206:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 20a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 20e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 212:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 216:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 21a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 21e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 222:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 226:	ff 91       	pop	r31
 228:	ef 91       	pop	r30
 22a:	bf 91       	pop	r27
 22c:	af 91       	pop	r26
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	7f 91       	pop	r23
 234:	6f 91       	pop	r22
 236:	5f 91       	pop	r21
 238:	4f 91       	pop	r20
 23a:	3f 91       	pop	r19
 23c:	2f 91       	pop	r18
 23e:	0f 90       	pop	r0
 240:	0b be       	out	0x3b, r0	; 59
 242:	0f 90       	pop	r0
 244:	0f be       	out	0x3f, r0	; 63
 246:	0f 90       	pop	r0
 248:	1f 90       	pop	r1
 24a:	18 95       	reti

0000024c <TimerSet>:
 24c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 250:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 254:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 258:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 25c:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <tasksPeriodCntDown>
 260:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <tasksPeriodCntDown+0x1>
 264:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown+0x2>
 268:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x3>
 26c:	08 95       	ret

0000026e <TimerOn>:
 26e:	8b e0       	ldi	r24, 0x0B	; 11
 270:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 274:	87 e0       	ldi	r24, 0x07	; 7
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 27c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 286:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 28a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 28e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 292:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 296:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 29a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 29e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 2a2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 2a6:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 2aa:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 2ae:	8f b7       	in	r24, 0x3f	; 63
 2b0:	80 68       	ori	r24, 0x80	; 128
 2b2:	8f bf       	out	0x3f, r24	; 63
 2b4:	08 95       	ret

000002b6 <Timer>:
 2b6:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <time>
 2ba:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <time+0x1>
 2be:	21 15       	cp	r18, r1
 2c0:	31 05       	cpc	r19, r1
 2c2:	41 f4       	brne	.+16     	; 0x2d4 <Timer+0x1e>
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <time+0x1>
 2cc:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <time>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	08 95       	ret
 2d4:	28 17       	cp	r18, r24
 2d6:	39 07       	cpc	r19, r25
 2d8:	30 f0       	brcs	.+12     	; 0x2e6 <Timer+0x30>
 2da:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <time+0x1>
 2de:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time>
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	08 95       	ret
 2e6:	2f 5f       	subi	r18, 0xFF	; 255
 2e8:	3f 4f       	sbci	r19, 0xFF	; 255
 2ea:	30 93 0a 01 	sts	0x010A, r19	; 0x80010a <time+0x1>
 2ee:	20 93 09 01 	sts	0x0109, r18	; 0x800109 <time>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	08 95       	ret

000002f6 <TickFct_Leader>:
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	ec 01       	movw	r28, r24
 2fc:	fc 01       	movw	r30, r24
 2fe:	31 96       	adiw	r30, 0x01	; 1
 300:	eb 30       	cpi	r30, 0x0B	; 11
 302:	f1 05       	cpc	r31, r1
 304:	08 f0       	brcs	.+2      	; 0x308 <TickFct_Leader+0x12>
 306:	eb c0       	rjmp	.+470    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 308:	ea 5b       	subi	r30, 0xBA	; 186
 30a:	ff 4f       	sbci	r31, 0xFF	; 255
 30c:	27 c1       	rjmp	.+590    	; 0x55c <__tablejump2__>
 30e:	1b b8       	out	0x0b, r1	; 11
 310:	c0 e0       	ldi	r28, 0x00	; 0
 312:	d0 e0       	ldi	r29, 0x00	; 0
 314:	e4 c0       	rjmp	.+456    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 316:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 31a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 31e:	00 9b       	sbis	0x00, 0	; 0
 320:	de c0       	rjmp	.+444    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	c7 df       	rcall	.-114    	; 0x2b6 <Timer>
 328:	c8 2f       	mov	r28, r24
 32a:	d0 e0       	ldi	r29, 0x00	; 0
 32c:	d8 c0       	rjmp	.+432    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 32e:	84 e0       	ldi	r24, 0x04	; 4
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	c1 df       	rcall	.-126    	; 0x2b6 <Timer>
 334:	88 23       	and	r24, r24
 336:	09 f4       	brne	.+2      	; 0x33a <TickFct_Leader+0x44>
 338:	d2 c0       	rjmp	.+420    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 33a:	00 9b       	sbis	0x00, 0	; 0
 33c:	c2 c0       	rjmp	.+388    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 33e:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 342:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 346:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 34a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 34e:	c2 e0       	ldi	r28, 0x02	; 2
 350:	d0 e0       	ldi	r29, 0x00	; 0
 352:	c5 c0       	rjmp	.+394    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 354:	84 e0       	ldi	r24, 0x04	; 4
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	ae df       	rcall	.-164    	; 0x2b6 <Timer>
 35a:	88 23       	and	r24, r24
 35c:	09 f4       	brne	.+2      	; 0x360 <TickFct_Leader+0x6a>
 35e:	bf c0       	rjmp	.+382    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 360:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 364:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 368:	8a 30       	cpi	r24, 0x0A	; 10
 36a:	91 05       	cpc	r25, r1
 36c:	d4 f4       	brge	.+52     	; 0x3a2 <TickFct_Leader+0xac>
 36e:	00 9b       	sbis	0x00, 0	; 0
 370:	12 c0       	rjmp	.+36     	; 0x396 <TickFct_Leader+0xa0>
 372:	21 e0       	ldi	r18, 0x01	; 1
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	08 2e       	mov	r0, r24
 378:	02 c0       	rjmp	.+4      	; 0x37e <TickFct_Leader+0x88>
 37a:	22 0f       	add	r18, r18
 37c:	33 1f       	adc	r19, r19
 37e:	0a 94       	dec	r0
 380:	e2 f7       	brpl	.-8      	; 0x37a <TickFct_Leader+0x84>
 382:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <data>
 386:	50 91 06 01 	lds	r21, 0x0106	; 0x800106 <data+0x1>
 38a:	24 2b       	or	r18, r20
 38c:	35 2b       	or	r19, r21
 38e:	30 93 06 01 	sts	0x0106, r19	; 0x800106 <data+0x1>
 392:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 396:	01 96       	adiw	r24, 0x01	; 1
 398:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 39c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 3a0:	9e c0       	rjmp	.+316    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 3a2:	00 99       	sbic	0x00, 0	; 0
 3a4:	91 c0       	rjmp	.+290    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 3a6:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 3aa:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 3ae:	c0 e0       	ldi	r28, 0x00	; 0
 3b0:	d0 e0       	ldi	r29, 0x00	; 0
 3b2:	95 c0       	rjmp	.+298    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 3b4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3b8:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <data+0x1>
 3bc:	00 97       	sbiw	r24, 0x00	; 0
 3be:	09 f4       	brne	.+2      	; 0x3c2 <TickFct_Leader+0xcc>
 3c0:	86 c0       	rjmp	.+268    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 3c2:	9c 01       	movw	r18, r24
 3c4:	22 27       	eor	r18, r18
 3c6:	33 70       	andi	r19, 0x03	; 3
 3c8:	21 15       	cp	r18, r1
 3ca:	31 05       	cpc	r19, r1
 3cc:	31 f4       	brne	.+12     	; 0x3da <TickFct_Leader+0xe4>
 3ce:	83 70       	andi	r24, 0x03	; 3
 3d0:	99 27       	eor	r25, r25
 3d2:	01 97       	sbiw	r24, 0x01	; 1
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <TickFct_Leader+0xe2>
 3d6:	83 c0       	rjmp	.+262    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 3d8:	7d c0       	rjmp	.+250    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 3da:	21 15       	cp	r18, r1
 3dc:	32 40       	sbci	r19, 0x02	; 2
 3de:	09 f0       	breq	.+2      	; 0x3e2 <TickFct_Leader+0xec>
 3e0:	7e c0       	rjmp	.+252    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 3e2:	02 9b       	sbis	0x00, 2	; 0
 3e4:	7c c0       	rjmp	.+248    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	93 e0       	ldi	r25, 0x03	; 3
 3ea:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data+0x1>
 3ee:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3f2:	c4 e0       	ldi	r28, 0x04	; 4
 3f4:	d0 e0       	ldi	r29, 0x00	; 0
 3f6:	73 c0       	rjmp	.+230    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	8b b9       	out	0x0b, r24	; 11
 3fc:	84 e0       	ldi	r24, 0x04	; 4
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	5a df       	rcall	.-332    	; 0x2b6 <Timer>
 402:	88 23       	and	r24, r24
 404:	09 f4       	brne	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 406:	6b c0       	rjmp	.+214    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 408:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 40c:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 410:	18 16       	cp	r1, r24
 412:	19 06       	cpc	r1, r25
 414:	34 f0       	brlt	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	01 96       	adiw	r24, 0x01	; 1
 418:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 41c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 420:	5e c0       	rjmp	.+188    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 422:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 426:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 42a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 42e:	80 ff       	sbrs	r24, 0
 430:	05 c0       	rjmp	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	8b b9       	out	0x0b, r24	; 11
 436:	c5 e0       	ldi	r28, 0x05	; 5
 438:	d0 e0       	ldi	r29, 0x00	; 0
 43a:	51 c0       	rjmp	.+162    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 43c:	1b b8       	out	0x0b, r1	; 11
 43e:	c5 e0       	ldi	r28, 0x05	; 5
 440:	d0 e0       	ldi	r29, 0x00	; 0
 442:	4d c0       	rjmp	.+154    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 444:	84 e0       	ldi	r24, 0x04	; 4
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	36 df       	rcall	.-404    	; 0x2b6 <Timer>
 44a:	88 23       	and	r24, r24
 44c:	e9 f0       	breq	.+58     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 44e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 452:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 456:	8a 30       	cpi	r24, 0x0A	; 10
 458:	91 05       	cpc	r25, r1
 45a:	0c f0       	brlt	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45c:	3e c0       	rjmp	.+124    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 45e:	01 96       	adiw	r24, 0x01	; 1
 460:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 464:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 468:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data>
 46c:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data+0x1>
 470:	a9 01       	movw	r20, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	55 95       	asr	r21
 476:	47 95       	ror	r20
 478:	8a 95       	dec	r24
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 47c:	40 ff       	sbrs	r20, 0
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	8b b9       	out	0x0b, r24	; 11
 484:	01 c0       	rjmp	.+2      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 486:	1b b8       	out	0x0b, r1	; 11
 488:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 48c:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 490:	0a 97       	sbiw	r24, 0x0a	; 10
 492:	2c f1       	brlt	.+74     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 494:	c6 e0       	ldi	r28, 0x06	; 6
 496:	d0 e0       	ldi	r29, 0x00	; 0
 498:	22 c0       	rjmp	.+68     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	8b b9       	out	0x0b, r24	; 11
 49e:	84 e0       	ldi	r24, 0x04	; 4
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	09 df       	rcall	.-494    	; 0x2b6 <Timer>
 4a4:	88 23       	and	r24, r24
 4a6:	d9 f0       	breq	.+54     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4a8:	1b b8       	out	0x0b, r1	; 11
 4aa:	c0 e0       	ldi	r28, 0x00	; 0
 4ac:	d0 e0       	ldi	r29, 0x00	; 0
 4ae:	17 c0       	rjmp	.+46     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4b0:	85 e5       	ldi	r24, 0x55	; 85
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data+0x1>
 4b8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 4bc:	c4 e0       	ldi	r28, 0x04	; 4
 4be:	d0 e0       	ldi	r29, 0x00	; 0
 4c0:	0e c0       	rjmp	.+28     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c2:	c0 e0       	ldi	r28, 0x00	; 0
 4c4:	d0 e0       	ldi	r29, 0x00	; 0
 4c6:	0b c0       	rjmp	.+22     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c8:	c3 e0       	ldi	r28, 0x03	; 3
 4ca:	d0 e0       	ldi	r29, 0x00	; 0
 4cc:	08 c0       	rjmp	.+16     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4ce:	c0 e0       	ldi	r28, 0x00	; 0
 4d0:	d0 e0       	ldi	r29, 0x00	; 0
 4d2:	05 c0       	rjmp	.+10     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d4:	c9 e0       	ldi	r28, 0x09	; 9
 4d6:	d0 e0       	ldi	r29, 0x00	; 0
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4da:	c6 e0       	ldi	r28, 0x06	; 6
 4dc:	d0 e0       	ldi	r29, 0x00	; 0
 4de:	ce 01       	movw	r24, r28
 4e0:	df 91       	pop	r29
 4e2:	cf 91       	pop	r28
 4e4:	08 95       	ret

000004e6 <setupADC>:



void setupADC()
{
	ADMUX=(1<<REFS0);
 4e6:	80 e4       	ldi	r24, 0x40	; 64
 4e8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 4ec:	87 e8       	ldi	r24, 0x87	; 135
 4ee:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 4f2:	08 95       	ret

000004f4 <main>:
	return state;
}


int main(void)
{
 4f4:	cf 93       	push	r28
 4f6:	df 93       	push	r29
 4f8:	cd b7       	in	r28, 0x3d	; 61
 4fa:	de b7       	in	r29, 0x3e	; 62
 4fc:	2b 97       	sbiw	r28, 0x0b	; 11
 4fe:	0f b6       	in	r0, 0x3f	; 63
 500:	f8 94       	cli
 502:	de bf       	out	0x3e, r29	; 62
 504:	0f be       	out	0x3f, r0	; 63
 506:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; LEDOUT = 0x00; // ID LED's
 508:	8f ef       	ldi	r24, 0xFF	; 255
 50a:	84 b9       	out	0x04, r24	; 4
 50c:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00; // RF Input and Output
 50e:	8a b9       	out	0x0a, r24	; 10
 510:	1b b8       	out	0x0b, r1	; 11
	DDRA = 0x00; PORTA = 0xFF; // Temp Resistor
 512:	11 b8       	out	0x01, r1	; 1
 514:	82 b9       	out	0x02, r24	; 2
	
	//DDRC = 0xFF; PORTC = 0x00; // ID LED's
	
	setupADC();
 516:	e7 df       	rcall	.-50     	; 0x4e6 <setupADC>
	//ADC_read();
	
	//unsigned short x =ADC_read(1);
	
	LEDOUT = ID;
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	85 b9       	out	0x05, r24	; 5
	
	//Set_Clock(500);
	tasksNum = 1;
 51c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksNum>
	task tsks[1];
	tasks = tsks;
 520:	ce 01       	movw	r24, r28
 522:	01 96       	adiw	r24, 0x01	; 1
 524:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <tasks+0x1>
 528:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = Idle;
 52c:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].period = 1;
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	a0 e0       	ldi	r26, 0x00	; 0
 534:	b0 e0       	ldi	r27, 0x00	; 0
 536:	8a 83       	std	Y+2, r24	; 0x02
 538:	9b 83       	std	Y+3, r25	; 0x03
 53a:	ac 83       	std	Y+4, r26	; 0x04
 53c:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 53e:	8e 83       	std	Y+6, r24	; 0x06
 540:	9f 83       	std	Y+7, r25	; 0x07
 542:	a8 87       	std	Y+8, r26	; 0x08
 544:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 546:	8b e7       	ldi	r24, 0x7B	; 123
 548:	91 e0       	ldi	r25, 0x01	; 1
 54a:	9b 87       	std	Y+11, r25	; 0x0b
 54c:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 54e:	61 e0       	ldi	r22, 0x01	; 1
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	90 e0       	ldi	r25, 0x00	; 0
	TimerOn();
 556:	7a de       	rcall	.-780    	; 0x24c <TimerSet>
 558:	8a de       	rcall	.-748    	; 0x26e <TimerOn>
 55a:	ff cf       	rjmp	.-2      	; 0x55a <main+0x66>

0000055c <__tablejump2__>:
 55c:	ee 0f       	add	r30, r30
 55e:	ff 1f       	adc	r31, r31
 560:	00 24       	eor	r0, r0
 562:	00 1c       	adc	r0, r0
 564:	0b be       	out	0x3b, r0	; 59
 566:	07 90       	elpm	r0, Z+
 568:	f6 91       	elpm	r31, Z
 56a:	e0 2d       	mov	r30, r0
 56c:	09 94       	ijmp

0000056e <_exit>:
 56e:	f8 94       	cli

00000570 <__stop_program>:
 570:	ff cf       	rjmp	.-2      	; 0x570 <__stop_program>
