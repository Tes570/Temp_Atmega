
Transciver Custom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000054c  000005e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800104  00800104  000005e4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000614  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000654  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000be1  00000000  00000000  000006ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000094a  00000000  00000000  0000128d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000051f  00000000  00000000  00001bd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  000020f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000521  00000000  00000000  00002214  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000461  00000000  00000000  00002735  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002b96  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	51 c0       	rjmp	.+162    	; 0xa4 <__ctors_end>
   2:	00 00       	nop
   4:	6c c0       	rjmp	.+216    	; 0xde <__bad_interrupt>
   6:	00 00       	nop
   8:	6a c0       	rjmp	.+212    	; 0xde <__bad_interrupt>
   a:	00 00       	nop
   c:	68 c0       	rjmp	.+208    	; 0xde <__bad_interrupt>
   e:	00 00       	nop
  10:	66 c0       	rjmp	.+204    	; 0xde <__bad_interrupt>
  12:	00 00       	nop
  14:	64 c0       	rjmp	.+200    	; 0xde <__bad_interrupt>
  16:	00 00       	nop
  18:	62 c0       	rjmp	.+196    	; 0xde <__bad_interrupt>
  1a:	00 00       	nop
  1c:	60 c0       	rjmp	.+192    	; 0xde <__bad_interrupt>
  1e:	00 00       	nop
  20:	5e c0       	rjmp	.+188    	; 0xde <__bad_interrupt>
  22:	00 00       	nop
  24:	5c c0       	rjmp	.+184    	; 0xde <__bad_interrupt>
  26:	00 00       	nop
  28:	5a c0       	rjmp	.+180    	; 0xde <__bad_interrupt>
  2a:	00 00       	nop
  2c:	58 c0       	rjmp	.+176    	; 0xde <__bad_interrupt>
  2e:	00 00       	nop
  30:	56 c0       	rjmp	.+172    	; 0xde <__bad_interrupt>
  32:	00 00       	nop
  34:	be c0       	rjmp	.+380    	; 0x1b2 <__vector_13>
  36:	00 00       	nop
  38:	52 c0       	rjmp	.+164    	; 0xde <__bad_interrupt>
  3a:	00 00       	nop
  3c:	50 c0       	rjmp	.+160    	; 0xde <__bad_interrupt>
  3e:	00 00       	nop
  40:	4e c0       	rjmp	.+156    	; 0xde <__bad_interrupt>
  42:	00 00       	nop
  44:	4c c0       	rjmp	.+152    	; 0xde <__bad_interrupt>
  46:	00 00       	nop
  48:	4a c0       	rjmp	.+148    	; 0xde <__bad_interrupt>
  4a:	00 00       	nop
  4c:	48 c0       	rjmp	.+144    	; 0xde <__bad_interrupt>
  4e:	00 00       	nop
  50:	46 c0       	rjmp	.+140    	; 0xde <__bad_interrupt>
  52:	00 00       	nop
  54:	44 c0       	rjmp	.+136    	; 0xde <__bad_interrupt>
  56:	00 00       	nop
  58:	42 c0       	rjmp	.+132    	; 0xde <__bad_interrupt>
  5a:	00 00       	nop
  5c:	40 c0       	rjmp	.+128    	; 0xde <__bad_interrupt>
  5e:	00 00       	nop
  60:	3e c0       	rjmp	.+124    	; 0xde <__bad_interrupt>
  62:	00 00       	nop
  64:	3c c0       	rjmp	.+120    	; 0xde <__bad_interrupt>
  66:	00 00       	nop
  68:	3a c0       	rjmp	.+116    	; 0xde <__bad_interrupt>
  6a:	00 00       	nop
  6c:	38 c0       	rjmp	.+112    	; 0xde <__bad_interrupt>
  6e:	00 00       	nop
  70:	36 c0       	rjmp	.+108    	; 0xde <__bad_interrupt>
  72:	00 00       	nop
  74:	34 c0       	rjmp	.+104    	; 0xde <__bad_interrupt>
  76:	00 00       	nop
  78:	32 c0       	rjmp	.+100    	; 0xde <__bad_interrupt>
  7a:	00 00       	nop
  7c:	30 c0       	rjmp	.+96     	; 0xde <__bad_interrupt>
  7e:	00 00       	nop
  80:	2e c0       	rjmp	.+92     	; 0xde <__bad_interrupt>
  82:	00 00       	nop
  84:	2c c0       	rjmp	.+88     	; 0xde <__bad_interrupt>
  86:	00 00       	nop
  88:	2a c0       	rjmp	.+84     	; 0xde <__bad_interrupt>
  8a:	00 00       	nop
  8c:	88 01       	movw	r16, r16
  8e:	8c 01       	movw	r16, r24
  90:	99 01       	movw	r18, r18
  92:	aa 01       	movw	r20, r20
  94:	d4 01       	movw	r26, r8
  96:	ef 01       	movw	r28, r30
  98:	15 02       	muls	r17, r21
  9a:	3f 02       	muls	r19, r31
  9c:	65 02       	muls	r22, r21
  9e:	65 02       	muls	r22, r21
  a0:	4a 02       	muls	r20, r26
  a2:	52 02       	muls	r21, r18

000000a4 <__ctors_end>:
  a4:	11 24       	eor	r1, r1
  a6:	1f be       	out	0x3f, r1	; 63
  a8:	cf ef       	ldi	r28, 0xFF	; 255
  aa:	d0 e4       	ldi	r29, 0x40	; 64
  ac:	de bf       	out	0x3e, r29	; 62
  ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
  b0:	11 e0       	ldi	r17, 0x01	; 1
  b2:	a0 e0       	ldi	r26, 0x00	; 0
  b4:	b1 e0       	ldi	r27, 0x01	; 1
  b6:	ec e4       	ldi	r30, 0x4C	; 76
  b8:	f5 e0       	ldi	r31, 0x05	; 5
  ba:	00 e0       	ldi	r16, 0x00	; 0
  bc:	0b bf       	out	0x3b, r16	; 59
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x14>
  c0:	07 90       	elpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a4 30       	cpi	r26, 0x04	; 4
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x10>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	a4 e0       	ldi	r26, 0x04	; 4
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a1 31       	cpi	r26, 0x11	; 17
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	fb d1       	rcall	.+1014   	; 0x4d2 <main>
  dc:	35 c2       	rjmp	.+1130   	; 0x548 <_exit>

000000de <__bad_interrupt>:
  de:	90 cf       	rjmp	.-224    	; 0x0 <__vectors>

000000e0 <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  e0:	cf 92       	push	r12
  e2:	df 92       	push	r13
  e4:	ef 92       	push	r14
  e6:	ff 92       	push	r15
  e8:	1f 93       	push	r17
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  f2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <tasksNum>
  f6:	88 23       	and	r24, r24
  f8:	09 f4       	brne	.+2      	; 0xfc <TimerISR+0x1c>
  fa:	53 c0       	rjmp	.+166    	; 0x1a2 <TimerISR+0xc2>
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	1b e0       	ldi	r17, 0x0B	; 11
 100:	c0 91 0f 01 	lds	r28, 0x010F	; 0x80010f <tasks>
 104:	d0 91 10 01 	lds	r29, 0x0110	; 0x800110 <tasks+0x1>
 108:	18 9f       	mul	r17, r24
 10a:	c0 0d       	add	r28, r0
 10c:	d1 1d       	adc	r29, r1
 10e:	11 24       	eor	r1, r1
 110:	4d 81       	ldd	r20, Y+5	; 0x05
 112:	5e 81       	ldd	r21, Y+6	; 0x06
 114:	6f 81       	ldd	r22, Y+7	; 0x07
 116:	78 85       	ldd	r23, Y+8	; 0x08
 118:	89 81       	ldd	r24, Y+1	; 0x01
 11a:	9a 81       	ldd	r25, Y+2	; 0x02
 11c:	ab 81       	ldd	r26, Y+3	; 0x03
 11e:	bc 81       	ldd	r27, Y+4	; 0x04
 120:	48 17       	cp	r20, r24
 122:	59 07       	cpc	r21, r25
 124:	6a 07       	cpc	r22, r26
 126:	7b 07       	cpc	r23, r27
 128:	b0 f0       	brcs	.+44     	; 0x156 <TimerISR+0x76>
 12a:	88 81       	ld	r24, Y
 12c:	e9 85       	ldd	r30, Y+9	; 0x09
 12e:	fa 85       	ldd	r31, Y+10	; 0x0a
 130:	08 2e       	mov	r0, r24
 132:	00 0c       	add	r0, r0
 134:	99 0b       	sbc	r25, r25
 136:	09 95       	icall
 138:	88 83       	st	Y, r24
 13a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 13e:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <tasks>
 142:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <tasks+0x1>
 146:	18 9f       	mul	r17, r24
 148:	e0 0d       	add	r30, r0
 14a:	f1 1d       	adc	r31, r1
 14c:	11 24       	eor	r1, r1
 14e:	15 82       	std	Z+5, r1	; 0x05
 150:	16 82       	std	Z+6, r1	; 0x06
 152:	17 82       	std	Z+7, r1	; 0x07
 154:	10 86       	std	Z+8, r1	; 0x08
 156:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 15a:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <tasks>
 15e:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <tasks+0x1>
 162:	18 9f       	mul	r17, r24
 164:	e0 0d       	add	r30, r0
 166:	f1 1d       	adc	r31, r1
 168:	11 24       	eor	r1, r1
 16a:	c5 80       	ldd	r12, Z+5	; 0x05
 16c:	d6 80       	ldd	r13, Z+6	; 0x06
 16e:	e7 80       	ldd	r14, Z+7	; 0x07
 170:	f0 84       	ldd	r15, Z+8	; 0x08
 172:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 176:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 17a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 17e:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 182:	4c 0d       	add	r20, r12
 184:	5d 1d       	adc	r21, r13
 186:	6e 1d       	adc	r22, r14
 188:	7f 1d       	adc	r23, r15
 18a:	45 83       	std	Z+5, r20	; 0x05
 18c:	56 83       	std	Z+6, r21	; 0x06
 18e:	67 83       	std	Z+7, r22	; 0x07
 190:	70 87       	std	Z+8, r23	; 0x08
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 198:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <tasksNum>
 19c:	89 17       	cp	r24, r25
 19e:	08 f4       	brcc	.+2      	; 0x1a2 <TimerISR+0xc2>
 1a0:	af cf       	rjmp	.-162    	; 0x100 <TimerISR+0x20>
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	1f 91       	pop	r17
 1a8:	ff 90       	pop	r15
 1aa:	ef 90       	pop	r14
 1ac:	df 90       	pop	r13
 1ae:	cf 90       	pop	r12
 1b0:	08 95       	ret

000001b2 <__vector_13>:
 1b2:	1f 92       	push	r1
 1b4:	0f 92       	push	r0
 1b6:	0f b6       	in	r0, 0x3f	; 63
 1b8:	0f 92       	push	r0
 1ba:	11 24       	eor	r1, r1
 1bc:	0b b6       	in	r0, 0x3b	; 59
 1be:	0f 92       	push	r0
 1c0:	2f 93       	push	r18
 1c2:	3f 93       	push	r19
 1c4:	4f 93       	push	r20
 1c6:	5f 93       	push	r21
 1c8:	6f 93       	push	r22
 1ca:	7f 93       	push	r23
 1cc:	8f 93       	push	r24
 1ce:	9f 93       	push	r25
 1d0:	af 93       	push	r26
 1d2:	bf 93       	push	r27
 1d4:	ef 93       	push	r30
 1d6:	ff 93       	push	r31
 1d8:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <tasksPeriodCntDown>
 1dc:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <tasksPeriodCntDown+0x1>
 1e0:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <tasksPeriodCntDown+0x2>
 1e4:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <tasksPeriodCntDown+0x3>
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	a1 09       	sbc	r26, r1
 1ec:	b1 09       	sbc	r27, r1
 1ee:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 1f2:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 1f6:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 1fa:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 1fe:	89 2b       	or	r24, r25
 200:	8a 2b       	or	r24, r26
 202:	8b 2b       	or	r24, r27
 204:	89 f4       	brne	.+34     	; 0x228 <__vector_13+0x76>
 206:	6c df       	rcall	.-296    	; 0xe0 <TimerISR>
 208:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 20c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 210:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 214:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 218:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 21c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 220:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 224:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 228:	ff 91       	pop	r31
 22a:	ef 91       	pop	r30
 22c:	bf 91       	pop	r27
 22e:	af 91       	pop	r26
 230:	9f 91       	pop	r25
 232:	8f 91       	pop	r24
 234:	7f 91       	pop	r23
 236:	6f 91       	pop	r22
 238:	5f 91       	pop	r21
 23a:	4f 91       	pop	r20
 23c:	3f 91       	pop	r19
 23e:	2f 91       	pop	r18
 240:	0f 90       	pop	r0
 242:	0b be       	out	0x3b, r0	; 59
 244:	0f 90       	pop	r0
 246:	0f be       	out	0x3f, r0	; 63
 248:	0f 90       	pop	r0
 24a:	1f 90       	pop	r1
 24c:	18 95       	reti

0000024e <TimerSet>:
 24e:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 252:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 256:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 25a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 25e:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <tasksPeriodCntDown>
 262:	70 93 0c 01 	sts	0x010C, r23	; 0x80010c <tasksPeriodCntDown+0x1>
 266:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksPeriodCntDown+0x2>
 26a:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <tasksPeriodCntDown+0x3>
 26e:	08 95       	ret

00000270 <TimerOn>:
 270:	8b e0       	ldi	r24, 0x0B	; 11
 272:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 276:	87 e0       	ldi	r24, 0x07	; 7
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 27e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 288:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 28c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 290:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 294:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 298:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 29c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2a0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 2a4:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 2a8:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 2ac:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 2b0:	8f b7       	in	r24, 0x3f	; 63
 2b2:	80 68       	ori	r24, 0x80	; 128
 2b4:	8f bf       	out	0x3f, r24	; 63
 2b6:	08 95       	ret

000002b8 <Timer>:
 2b8:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <time>
 2bc:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <time+0x1>
 2c0:	21 15       	cp	r18, r1
 2c2:	31 05       	cpc	r19, r1
 2c4:	41 f4       	brne	.+16     	; 0x2d6 <Timer+0x1e>
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <time+0x1>
 2ce:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <time>
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	08 95       	ret
 2d6:	28 17       	cp	r18, r24
 2d8:	39 07       	cpc	r19, r25
 2da:	30 f0       	brcs	.+12     	; 0x2e8 <Timer+0x30>
 2dc:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time+0x1>
 2e0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <time>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	08 95       	ret
 2e8:	2f 5f       	subi	r18, 0xFF	; 255
 2ea:	3f 4f       	sbci	r19, 0xFF	; 255
 2ec:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <time+0x1>
 2f0:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <time>
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	08 95       	ret

000002f8 <TickFct_Leader>:
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	ec 01       	movw	r28, r24
 2fe:	fc 01       	movw	r30, r24
 300:	31 96       	adiw	r30, 0x01	; 1
 302:	ec 30       	cpi	r30, 0x0C	; 12
 304:	f1 05       	cpc	r31, r1
 306:	08 f0       	brcs	.+2      	; 0x30a <TickFct_Leader+0x12>
 308:	e0 c0       	rjmp	.+448    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 30a:	ea 5b       	subi	r30, 0xBA	; 186
 30c:	ff 4f       	sbci	r31, 0xFF	; 255
 30e:	13 c1       	rjmp	.+550    	; 0x536 <__tablejump2__>
 310:	1b b8       	out	0x0b, r1	; 11
 312:	c0 e0       	ldi	r28, 0x00	; 0
 314:	d0 e0       	ldi	r29, 0x00	; 0
 316:	d9 c0       	rjmp	.+434    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 318:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 31c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 320:	15 b8       	out	0x05, r1	; 5
 322:	00 9b       	sbis	0x00, 0	; 0
 324:	d2 c0       	rjmp	.+420    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	c6 df       	rcall	.-116    	; 0x2b8 <Timer>
 32c:	c8 2f       	mov	r28, r24
 32e:	d0 e0       	ldi	r29, 0x00	; 0
 330:	cc c0       	rjmp	.+408    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 332:	84 e0       	ldi	r24, 0x04	; 4
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	c0 df       	rcall	.-128    	; 0x2b8 <Timer>
 338:	88 23       	and	r24, r24
 33a:	09 f4       	brne	.+2      	; 0x33e <TickFct_Leader+0x46>
 33c:	c6 c0       	rjmp	.+396    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 33e:	00 9b       	sbis	0x00, 0	; 0
 340:	b9 c0       	rjmp	.+370    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 342:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 346:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 34a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 34e:	c2 e0       	ldi	r28, 0x02	; 2
 350:	d0 e0       	ldi	r29, 0x00	; 0
 352:	bb c0       	rjmp	.+374    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 354:	84 e0       	ldi	r24, 0x04	; 4
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	af df       	rcall	.-162    	; 0x2b8 <Timer>
 35a:	88 23       	and	r24, r24
 35c:	09 f4       	brne	.+2      	; 0x360 <TickFct_Leader+0x68>
 35e:	b5 c0       	rjmp	.+362    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 360:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 364:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 368:	88 30       	cpi	r24, 0x08	; 8
 36a:	91 05       	cpc	r25, r1
 36c:	ac f4       	brge	.+42     	; 0x398 <TickFct_Leader+0xa0>
 36e:	00 9b       	sbis	0x00, 0	; 0
 370:	0d c0       	rjmp	.+26     	; 0x38c <TickFct_Leader+0x94>
 372:	21 e0       	ldi	r18, 0x01	; 1
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	08 2e       	mov	r0, r24
 378:	02 c0       	rjmp	.+4      	; 0x37e <TickFct_Leader+0x86>
 37a:	22 0f       	add	r18, r18
 37c:	33 1f       	adc	r19, r19
 37e:	0a 94       	dec	r0
 380:	e2 f7       	brpl	.-8      	; 0x37a <TickFct_Leader+0x82>
 382:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <data>
 386:	23 2b       	or	r18, r19
 388:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 38c:	01 96       	adiw	r24, 0x01	; 1
 38e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 392:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 396:	99 c0       	rjmp	.+306    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 398:	00 9b       	sbis	0x00, 0	; 0
 39a:	8f c0       	rjmp	.+286    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 39c:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3a0:	85 b9       	out	0x05, r24	; 5
 3a2:	ca e0       	ldi	r28, 0x0A	; 10
 3a4:	d0 e0       	ldi	r29, 0x00	; 0
 3a6:	91 c0       	rjmp	.+290    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 3a8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3ac:	88 23       	and	r24, r24
 3ae:	09 f4       	brne	.+2      	; 0x3b2 <TickFct_Leader+0xba>
 3b0:	87 c0       	rjmp	.+270    	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 3b2:	98 2f       	mov	r25, r24
 3b4:	90 7c       	andi	r25, 0xC0	; 192
 3b6:	51 f4       	brne	.+20     	; 0x3cc <TickFct_Leader+0xd4>
 3b8:	83 70       	andi	r24, 0x03	; 3
 3ba:	81 30       	cpi	r24, 0x01	; 1
 3bc:	09 f0       	breq	.+2      	; 0x3c0 <TickFct_Leader+0xc8>
 3be:	85 c0       	rjmp	.+266    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 3c0:	81 e4       	ldi	r24, 0x41	; 65
 3c2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3c6:	c4 e0       	ldi	r28, 0x04	; 4
 3c8:	d0 e0       	ldi	r29, 0x00	; 0
 3ca:	7f c0       	rjmp	.+254    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 3cc:	90 38       	cpi	r25, 0x80	; 128
 3ce:	09 f0       	breq	.+2      	; 0x3d2 <TickFct_Leader+0xda>
 3d0:	7c c0       	rjmp	.+248    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 3d2:	81 ec       	ldi	r24, 0xC1	; 193
 3d4:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3d8:	c4 e0       	ldi	r28, 0x04	; 4
 3da:	d0 e0       	ldi	r29, 0x00	; 0
 3dc:	76 c0       	rjmp	.+236    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	8b b9       	out	0x0b, r24	; 11
 3e2:	84 e0       	ldi	r24, 0x04	; 4
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	68 df       	rcall	.-304    	; 0x2b8 <Timer>
 3e8:	88 23       	and	r24, r24
 3ea:	09 f4       	brne	.+2      	; 0x3ee <TickFct_Leader+0xf6>
 3ec:	6e c0       	rjmp	.+220    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 3ee:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 3f2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 3f6:	18 16       	cp	r1, r24
 3f8:	19 06       	cpc	r1, r25
 3fa:	34 f0       	brlt	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fc:	01 96       	adiw	r24, 0x01	; 1
 3fe:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 402:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 406:	61 c0       	rjmp	.+194    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 408:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 40c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 410:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 414:	80 ff       	sbrs	r24, 0
 416:	05 c0       	rjmp	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	8b b9       	out	0x0b, r24	; 11
 41c:	c5 e0       	ldi	r28, 0x05	; 5
 41e:	d0 e0       	ldi	r29, 0x00	; 0
 420:	54 c0       	rjmp	.+168    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 422:	1b b8       	out	0x0b, r1	; 11
 424:	c5 e0       	ldi	r28, 0x05	; 5
 426:	d0 e0       	ldi	r29, 0x00	; 0
 428:	50 c0       	rjmp	.+160    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 42a:	84 e0       	ldi	r24, 0x04	; 4
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	44 df       	rcall	.-376    	; 0x2b8 <Timer>
 430:	88 23       	and	r24, r24
 432:	e1 f0       	breq	.+56     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 434:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 438:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 43c:	88 30       	cpi	r24, 0x08	; 8
 43e:	91 05       	cpc	r25, r1
 440:	0c f0       	brlt	.+2      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 442:	41 c0       	rjmp	.+130    	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 444:	01 96       	adiw	r24, 0x01	; 1
 446:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 44a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 44e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data>
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	a9 01       	movw	r20, r18
 456:	02 c0       	rjmp	.+4      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 458:	55 95       	asr	r21
 45a:	47 95       	ror	r20
 45c:	8a 95       	dec	r24
 45e:	e2 f7       	brpl	.-8      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 460:	40 ff       	sbrs	r20, 0
 462:	03 c0       	rjmp	.+6      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	8b b9       	out	0x0b, r24	; 11
 468:	01 c0       	rjmp	.+2      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 46a:	1b b8       	out	0x0b, r1	; 11
 46c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 470:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 474:	08 97       	sbiw	r24, 0x08	; 8
 476:	4c f1       	brlt	.+82     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 478:	c6 e0       	ldi	r28, 0x06	; 6
 47a:	d0 e0       	ldi	r29, 0x00	; 0
 47c:	26 c0       	rjmp	.+76     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	8b b9       	out	0x0b, r24	; 11
 482:	84 e0       	ldi	r24, 0x04	; 4
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	18 df       	rcall	.-464    	; 0x2b8 <Timer>
 488:	88 23       	and	r24, r24
 48a:	f9 f0       	breq	.+62     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 48c:	1b b8       	out	0x0b, r1	; 11
 48e:	c9 e0       	ldi	r28, 0x09	; 9
 490:	d0 e0       	ldi	r29, 0x00	; 0
 492:	1b c0       	rjmp	.+54     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 494:	88 ec       	ldi	r24, 0xC8	; 200
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0f df       	rcall	.-482    	; 0x2b8 <Timer>
 49a:	88 23       	and	r24, r24
 49c:	b1 f0       	breq	.+44     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 49e:	c0 e0       	ldi	r28, 0x00	; 0
 4a0:	d0 e0       	ldi	r29, 0x00	; 0
 4a2:	13 c0       	rjmp	.+38     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4a4:	80 e2       	ldi	r24, 0x20	; 32
 4a6:	93 e0       	ldi	r25, 0x03	; 3
 4a8:	07 df       	rcall	.-498    	; 0x2b8 <Timer>
 4aa:	88 23       	and	r24, r24
 4ac:	71 f0       	breq	.+28     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ae:	c0 e0       	ldi	r28, 0x00	; 0
 4b0:	d0 e0       	ldi	r29, 0x00	; 0
 4b2:	0b c0       	rjmp	.+22     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4b4:	c0 e0       	ldi	r28, 0x00	; 0
 4b6:	d0 e0       	ldi	r29, 0x00	; 0
 4b8:	08 c0       	rjmp	.+16     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ba:	c0 e0       	ldi	r28, 0x00	; 0
 4bc:	d0 e0       	ldi	r29, 0x00	; 0
 4be:	05 c0       	rjmp	.+10     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c0:	c0 e0       	ldi	r28, 0x00	; 0
 4c2:	d0 e0       	ldi	r29, 0x00	; 0
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c6:	c6 e0       	ldi	r28, 0x06	; 6
 4c8:	d0 e0       	ldi	r29, 0x00	; 0
 4ca:	ce 01       	movw	r24, r28
 4cc:	df 91       	pop	r29
 4ce:	cf 91       	pop	r28
 4d0:	08 95       	ret

000004d2 <main>:
	return state;
}


int main(void)
{
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	cd b7       	in	r28, 0x3d	; 61
 4d8:	de b7       	in	r29, 0x3e	; 62
 4da:	2b 97       	sbiw	r28, 0x0b	; 11
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	f8 94       	cli
 4e0:	de bf       	out	0x3e, r29	; 62
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; LEDOUT = 0x00; // ID LED's
 4e6:	8f ef       	ldi	r24, 0xFF	; 255
 4e8:	84 b9       	out	0x04, r24	; 4
 4ea:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00; // RF Input and Output
 4ec:	8a b9       	out	0x0a, r24	; 10
 4ee:	1b b8       	out	0x0b, r1	; 11
	DDRA = 0x00; PORTA = 0xFF; // Temp Resistor
 4f0:	11 b8       	out	0x01, r1	; 1
 4f2:	82 b9       	out	0x02, r24	; 2
	//DDRC = 0xFF; PORTC = 0x00; // ID LED's
	
	//LEDOUT = ID;
	
	//Set_Clock(500);
	tasksNum = 1;
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <tasksNum>
	task tsks[1];
	tasks = tsks;
 4fa:	ce 01       	movw	r24, r28
 4fc:	01 96       	adiw	r24, 0x01	; 1
 4fe:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <tasks+0x1>
 502:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = Idle;
 506:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].period = 1;
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	a0 e0       	ldi	r26, 0x00	; 0
 50e:	b0 e0       	ldi	r27, 0x00	; 0
 510:	8a 83       	std	Y+2, r24	; 0x02
 512:	9b 83       	std	Y+3, r25	; 0x03
 514:	ac 83       	std	Y+4, r26	; 0x04
 516:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 518:	8e 83       	std	Y+6, r24	; 0x06
 51a:	9f 83       	std	Y+7, r25	; 0x07
 51c:	a8 87       	std	Y+8, r26	; 0x08
 51e:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 520:	8c e7       	ldi	r24, 0x7C	; 124
 522:	91 e0       	ldi	r25, 0x01	; 1
 524:	9b 87       	std	Y+11, r25	; 0x0b
 526:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 528:	61 e0       	ldi	r22, 0x01	; 1
 52a:	70 e0       	ldi	r23, 0x00	; 0
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	8e de       	rcall	.-740    	; 0x24e <TimerSet>
	TimerOn();
 532:	9e de       	rcall	.-708    	; 0x270 <TimerOn>
 534:	ff cf       	rjmp	.-2      	; 0x534 <main+0x62>

00000536 <__tablejump2__>:
 536:	ee 0f       	add	r30, r30
 538:	ff 1f       	adc	r31, r31
 53a:	00 24       	eor	r0, r0
 53c:	00 1c       	adc	r0, r0
 53e:	0b be       	out	0x3b, r0	; 59
 540:	07 90       	elpm	r0, Z+
 542:	f6 91       	elpm	r31, Z
 544:	e0 2d       	mov	r30, r0
 546:	09 94       	ijmp

00000548 <_exit>:
 548:	f8 94       	cli

0000054a <__stop_program>:
 54a:	ff cf       	rjmp	.-2      	; 0x54a <__stop_program>
