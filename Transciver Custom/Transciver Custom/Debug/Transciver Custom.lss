
Transciver Custom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000582  00000616  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000582  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800104  00800104  0000061a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000061a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bcf  00000000  00000000  000006f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097a  00000000  00000000  000012c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000585  00000000  00000000  00001c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  000021c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000536  00000000  00000000  00002300  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000446  00000000  00000000  00002836  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002c7c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	50 c0       	rjmp	.+160    	; 0xa2 <__ctors_end>
   2:	00 00       	nop
   4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
   6:	00 00       	nop
   8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
   a:	00 00       	nop
   c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
   e:	00 00       	nop
  10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
  12:	00 00       	nop
  14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
  16:	00 00       	nop
  18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
  1e:	00 00       	nop
  20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
  22:	00 00       	nop
  24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
  26:	00 00       	nop
  28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
  2e:	00 00       	nop
  30:	55 c0       	rjmp	.+170    	; 0xdc <__bad_interrupt>
  32:	00 00       	nop
  34:	bd c0       	rjmp	.+378    	; 0x1b0 <__vector_13>
  36:	00 00       	nop
  38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4f c0       	rjmp	.+158    	; 0xdc <__bad_interrupt>
  3e:	00 00       	nop
  40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
  42:	00 00       	nop
  44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
  46:	00 00       	nop
  48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
  4e:	00 00       	nop
  50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
  52:	00 00       	nop
  54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
  56:	00 00       	nop
  58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
  5e:	00 00       	nop
  60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
  62:	00 00       	nop
  64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
  66:	00 00       	nop
  68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
  6e:	00 00       	nop
  70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
  72:	00 00       	nop
  74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
  76:	00 00       	nop
  78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
  7e:	00 00       	nop
  80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
  82:	00 00       	nop
  84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
  86:	00 00       	nop
  88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	87 01       	movw	r16, r14
  8e:	8b 01       	movw	r16, r22
  90:	9e 01       	movw	r18, r28
  92:	b1 01       	movw	r22, r2
  94:	ec 01       	movw	r28, r24
  96:	11 02       	muls	r17, r17
  98:	37 02       	muls	r19, r23
  9a:	65 02       	muls	r22, r21
  9c:	7f 02       	muls	r23, r31
  9e:	7f 02       	muls	r23, r31
  a0:	70 02       	muls	r23, r16

000000a2 <__ctors_end>:
  a2:	11 24       	eor	r1, r1
  a4:	1f be       	out	0x3f, r1	; 63
  a6:	cf ef       	ldi	r28, 0xFF	; 255
  a8:	d0 e4       	ldi	r29, 0x40	; 64
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	cd bf       	out	0x3d, r28	; 61

000000ae <__do_copy_data>:
  ae:	11 e0       	ldi	r17, 0x01	; 1
  b0:	a0 e0       	ldi	r26, 0x00	; 0
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	e2 e8       	ldi	r30, 0x82	; 130
  b6:	f5 e0       	ldi	r31, 0x05	; 5
  b8:	00 e0       	ldi	r16, 0x00	; 0
  ba:	0b bf       	out	0x3b, r16	; 59
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x14>
  be:	07 90       	elpm	r0, Z+
  c0:	0d 92       	st	X+, r0
  c2:	a4 30       	cpi	r26, 0x04	; 4
  c4:	b1 07       	cpc	r27, r17
  c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x10>

000000c8 <__do_clear_bss>:
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	a4 e0       	ldi	r26, 0x04	; 4
  cc:	b1 e0       	ldi	r27, 0x01	; 1
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
  d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
  d2:	a4 31       	cpi	r26, 0x14	; 20
  d4:	b2 07       	cpc	r27, r18
  d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
  d8:	16 d2       	rcall	.+1068   	; 0x506 <main>
  da:	51 c2       	rjmp	.+1186   	; 0x57e <_exit>

000000dc <__bad_interrupt>:
  dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  de:	cf 92       	push	r12
  e0:	df 92       	push	r13
  e2:	ef 92       	push	r14
  e4:	ff 92       	push	r15
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  f0:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <tasksNum>
  f4:	88 23       	and	r24, r24
  f6:	09 f4       	brne	.+2      	; 0xfa <TimerISR+0x1c>
  f8:	53 c0       	rjmp	.+166    	; 0x1a0 <TimerISR+0xc2>
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	1b e0       	ldi	r17, 0x0B	; 11
  fe:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <tasks>
 102:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <tasks+0x1>
 106:	18 9f       	mul	r17, r24
 108:	c0 0d       	add	r28, r0
 10a:	d1 1d       	adc	r29, r1
 10c:	11 24       	eor	r1, r1
 10e:	4d 81       	ldd	r20, Y+5	; 0x05
 110:	5e 81       	ldd	r21, Y+6	; 0x06
 112:	6f 81       	ldd	r22, Y+7	; 0x07
 114:	78 85       	ldd	r23, Y+8	; 0x08
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	9a 81       	ldd	r25, Y+2	; 0x02
 11a:	ab 81       	ldd	r26, Y+3	; 0x03
 11c:	bc 81       	ldd	r27, Y+4	; 0x04
 11e:	48 17       	cp	r20, r24
 120:	59 07       	cpc	r21, r25
 122:	6a 07       	cpc	r22, r26
 124:	7b 07       	cpc	r23, r27
 126:	b0 f0       	brcs	.+44     	; 0x154 <TimerISR+0x76>
 128:	88 81       	ld	r24, Y
 12a:	e9 85       	ldd	r30, Y+9	; 0x09
 12c:	fa 85       	ldd	r31, Y+10	; 0x0a
 12e:	08 2e       	mov	r0, r24
 130:	00 0c       	add	r0, r0
 132:	99 0b       	sbc	r25, r25
 134:	09 95       	icall
 136:	88 83       	st	Y, r24
 138:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 13c:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <tasks>
 140:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <tasks+0x1>
 144:	18 9f       	mul	r17, r24
 146:	e0 0d       	add	r30, r0
 148:	f1 1d       	adc	r31, r1
 14a:	11 24       	eor	r1, r1
 14c:	15 82       	std	Z+5, r1	; 0x05
 14e:	16 82       	std	Z+6, r1	; 0x06
 150:	17 82       	std	Z+7, r1	; 0x07
 152:	10 86       	std	Z+8, r1	; 0x08
 154:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 158:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <tasks>
 15c:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <tasks+0x1>
 160:	18 9f       	mul	r17, r24
 162:	e0 0d       	add	r30, r0
 164:	f1 1d       	adc	r31, r1
 166:	11 24       	eor	r1, r1
 168:	c5 80       	ldd	r12, Z+5	; 0x05
 16a:	d6 80       	ldd	r13, Z+6	; 0x06
 16c:	e7 80       	ldd	r14, Z+7	; 0x07
 16e:	f0 84       	ldd	r15, Z+8	; 0x08
 170:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 174:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 178:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 17c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 180:	4c 0d       	add	r20, r12
 182:	5d 1d       	adc	r21, r13
 184:	6e 1d       	adc	r22, r14
 186:	7f 1d       	adc	r23, r15
 188:	45 83       	std	Z+5, r20	; 0x05
 18a:	56 83       	std	Z+6, r21	; 0x06
 18c:	67 83       	std	Z+7, r22	; 0x07
 18e:	70 87       	std	Z+8, r23	; 0x08
 190:	8f 5f       	subi	r24, 0xFF	; 255
 192:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 196:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <tasksNum>
 19a:	89 17       	cp	r24, r25
 19c:	08 f4       	brcc	.+2      	; 0x1a0 <TimerISR+0xc2>
 19e:	af cf       	rjmp	.-162    	; 0xfe <TimerISR+0x20>
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	1f 91       	pop	r17
 1a6:	ff 90       	pop	r15
 1a8:	ef 90       	pop	r14
 1aa:	df 90       	pop	r13
 1ac:	cf 90       	pop	r12
 1ae:	08 95       	ret

000001b0 <__vector_13>:
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	0b b6       	in	r0, 0x3b	; 59
 1bc:	0f 92       	push	r0
 1be:	2f 93       	push	r18
 1c0:	3f 93       	push	r19
 1c2:	4f 93       	push	r20
 1c4:	5f 93       	push	r21
 1c6:	6f 93       	push	r22
 1c8:	7f 93       	push	r23
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
 1d6:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <tasksPeriodCntDown>
 1da:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <tasksPeriodCntDown+0x1>
 1de:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <tasksPeriodCntDown+0x2>
 1e2:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <tasksPeriodCntDown+0x3>
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	a1 09       	sbc	r26, r1
 1ea:	b1 09       	sbc	r27, r1
 1ec:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 1f0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 1f4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 1f8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 1fc:	89 2b       	or	r24, r25
 1fe:	8a 2b       	or	r24, r26
 200:	8b 2b       	or	r24, r27
 202:	89 f4       	brne	.+34     	; 0x226 <__vector_13+0x76>
 204:	6c df       	rcall	.-296    	; 0xde <TimerISR>
 206:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 20a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 20e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 212:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 216:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 21a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 21e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 222:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 226:	ff 91       	pop	r31
 228:	ef 91       	pop	r30
 22a:	bf 91       	pop	r27
 22c:	af 91       	pop	r26
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	7f 91       	pop	r23
 234:	6f 91       	pop	r22
 236:	5f 91       	pop	r21
 238:	4f 91       	pop	r20
 23a:	3f 91       	pop	r19
 23c:	2f 91       	pop	r18
 23e:	0f 90       	pop	r0
 240:	0b be       	out	0x3b, r0	; 59
 242:	0f 90       	pop	r0
 244:	0f be       	out	0x3f, r0	; 63
 246:	0f 90       	pop	r0
 248:	1f 90       	pop	r1
 24a:	18 95       	reti

0000024c <TimerSet>:
 24c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 250:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 254:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 258:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 25c:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <tasksPeriodCntDown>
 260:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <tasksPeriodCntDown+0x1>
 264:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown+0x2>
 268:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x3>
 26c:	08 95       	ret

0000026e <TimerOn>:
 26e:	8b e0       	ldi	r24, 0x0B	; 11
 270:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 274:	8d e7       	ldi	r24, 0x7D	; 125
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 27c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 286:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 28a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 28e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 292:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 296:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 29a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 29e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 2a2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 2a6:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 2aa:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 2ae:	8f b7       	in	r24, 0x3f	; 63
 2b0:	80 68       	ori	r24, 0x80	; 128
 2b2:	8f bf       	out	0x3f, r24	; 63
 2b4:	08 95       	ret

000002b6 <Timer>:
 2b6:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <time>
 2ba:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <time+0x1>
 2be:	21 15       	cp	r18, r1
 2c0:	31 05       	cpc	r19, r1
 2c2:	41 f4       	brne	.+16     	; 0x2d4 <Timer+0x1e>
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <time+0x1>
 2cc:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <time>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	08 95       	ret
 2d4:	28 17       	cp	r18, r24
 2d6:	39 07       	cpc	r19, r25
 2d8:	30 f0       	brcs	.+12     	; 0x2e6 <Timer+0x30>
 2da:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <time+0x1>
 2de:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time>
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	08 95       	ret
 2e6:	2f 5f       	subi	r18, 0xFF	; 255
 2e8:	3f 4f       	sbci	r19, 0xFF	; 255
 2ea:	30 93 0a 01 	sts	0x010A, r19	; 0x80010a <time+0x1>
 2ee:	20 93 09 01 	sts	0x0109, r18	; 0x800109 <time>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	08 95       	ret

000002f6 <TickFct_Leader>:
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	ec 01       	movw	r28, r24
 2fc:	fc 01       	movw	r30, r24
 2fe:	31 96       	adiw	r30, 0x01	; 1
 300:	eb 30       	cpi	r30, 0x0B	; 11
 302:	f1 05       	cpc	r31, r1
 304:	08 f0       	brcs	.+2      	; 0x308 <TickFct_Leader+0x12>
 306:	fb c0       	rjmp	.+502    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 308:	ea 5b       	subi	r30, 0xBA	; 186
 30a:	ff 4f       	sbci	r31, 0xFF	; 255
 30c:	2f c1       	rjmp	.+606    	; 0x56c <__tablejump2__>
 30e:	1b b8       	out	0x0b, r1	; 11
 310:	c0 e0       	ldi	r28, 0x00	; 0
 312:	d0 e0       	ldi	r29, 0x00	; 0
 314:	f4 c0       	rjmp	.+488    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 316:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 31a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 31e:	84 e6       	ldi	r24, 0x64	; 100
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	c9 df       	rcall	.-110    	; 0x2b6 <Timer>
 324:	88 23       	and	r24, r24
 326:	09 f4       	brne	.+2      	; 0x32a <TickFct_Leader+0x34>
 328:	ea c0       	rjmp	.+468    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 32a:	85 e3       	ldi	r24, 0x35	; 53
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data+0x1>
 332:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 336:	c4 e0       	ldi	r28, 0x04	; 4
 338:	d0 e0       	ldi	r29, 0x00	; 0
 33a:	e1 c0       	rjmp	.+450    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 33c:	84 e0       	ldi	r24, 0x04	; 4
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	ba df       	rcall	.-140    	; 0x2b6 <Timer>
 342:	88 23       	and	r24, r24
 344:	09 f4       	brne	.+2      	; 0x348 <TickFct_Leader+0x52>
 346:	db c0       	rjmp	.+438    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 348:	00 9b       	sbis	0x00, 0	; 0
 34a:	d1 c0       	rjmp	.+418    	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 34c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 350:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 354:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 358:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 35c:	c2 e0       	ldi	r28, 0x02	; 2
 35e:	d0 e0       	ldi	r29, 0x00	; 0
 360:	ce c0       	rjmp	.+412    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 362:	84 e0       	ldi	r24, 0x04	; 4
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	a7 df       	rcall	.-178    	; 0x2b6 <Timer>
 368:	88 23       	and	r24, r24
 36a:	09 f4       	brne	.+2      	; 0x36e <TickFct_Leader+0x78>
 36c:	c8 c0       	rjmp	.+400    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 36e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 372:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 376:	8a 30       	cpi	r24, 0x0A	; 10
 378:	91 05       	cpc	r25, r1
 37a:	d4 f4       	brge	.+52     	; 0x3b0 <TickFct_Leader+0xba>
 37c:	00 9b       	sbis	0x00, 0	; 0
 37e:	12 c0       	rjmp	.+36     	; 0x3a4 <TickFct_Leader+0xae>
 380:	21 e0       	ldi	r18, 0x01	; 1
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	08 2e       	mov	r0, r24
 386:	02 c0       	rjmp	.+4      	; 0x38c <TickFct_Leader+0x96>
 388:	22 0f       	add	r18, r18
 38a:	33 1f       	adc	r19, r19
 38c:	0a 94       	dec	r0
 38e:	e2 f7       	brpl	.-8      	; 0x388 <TickFct_Leader+0x92>
 390:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <data>
 394:	50 91 06 01 	lds	r21, 0x0106	; 0x800106 <data+0x1>
 398:	24 2b       	or	r18, r20
 39a:	35 2b       	or	r19, r21
 39c:	30 93 06 01 	sts	0x0106, r19	; 0x800106 <data+0x1>
 3a0:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 3a4:	01 96       	adiw	r24, 0x01	; 1
 3a6:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 3aa:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 3ae:	a7 c0       	rjmp	.+334    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 3b0:	00 9b       	sbis	0x00, 0	; 0
 3b2:	07 c0       	rjmp	.+14     	; 0x3c2 <TickFct_Leader+0xcc>
 3b4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 3b8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 3bc:	c3 e0       	ldi	r28, 0x03	; 3
 3be:	d0 e0       	ldi	r29, 0x00	; 0
 3c0:	9e c0       	rjmp	.+316    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 3c2:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 3c6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 3ca:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 3ce:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 3d2:	c0 e0       	ldi	r28, 0x00	; 0
 3d4:	d0 e0       	ldi	r29, 0x00	; 0
 3d6:	93 c0       	rjmp	.+294    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 3d8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 3dc:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 3e0:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3e4:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <data+0x1>
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	09 f4       	brne	.+2      	; 0x3ee <TickFct_Leader+0xf8>
 3ec:	83 c0       	rjmp	.+262    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 3ee:	90 ff       	sbrs	r25, 0
 3f0:	07 c0       	rjmp	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	9c 01       	movw	r18, r24
 3f4:	23 70       	andi	r18, 0x03	; 3
 3f6:	33 27       	eor	r19, r19
 3f8:	21 30       	cpi	r18, 0x01	; 1
 3fa:	31 05       	cpc	r19, r1
 3fc:	09 f4       	brne	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fe:	7d c0       	rjmp	.+250    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 400:	88 27       	eor	r24, r24
 402:	93 70       	andi	r25, 0x03	; 3
 404:	81 15       	cp	r24, r1
 406:	92 40       	sbci	r25, 0x02	; 2
 408:	09 f0       	breq	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40a:	79 c0       	rjmp	.+242    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 40c:	02 9b       	sbis	0x00, 2	; 0
 40e:	77 c0       	rjmp	.+238    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	93 e0       	ldi	r25, 0x03	; 3
 414:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data+0x1>
 418:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 41c:	c4 e0       	ldi	r28, 0x04	; 4
 41e:	d0 e0       	ldi	r29, 0x00	; 0
 420:	6e c0       	rjmp	.+220    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	8b b9       	out	0x0b, r24	; 11
 426:	84 e0       	ldi	r24, 0x04	; 4
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	45 df       	rcall	.-374    	; 0x2b6 <Timer>
 42c:	88 23       	and	r24, r24
 42e:	09 f4       	brne	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	66 c0       	rjmp	.+204    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 432:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 436:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 43a:	18 16       	cp	r1, r24
 43c:	19 06       	cpc	r1, r25
 43e:	34 f0       	brlt	.+12     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 446:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 44a:	59 c0       	rjmp	.+178    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 44c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 450:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 454:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 458:	80 ff       	sbrs	r24, 0
 45a:	05 c0       	rjmp	.+10     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	8b b9       	out	0x0b, r24	; 11
 460:	c5 e0       	ldi	r28, 0x05	; 5
 462:	d0 e0       	ldi	r29, 0x00	; 0
 464:	4c c0       	rjmp	.+152    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 466:	1b b8       	out	0x0b, r1	; 11
 468:	c5 e0       	ldi	r28, 0x05	; 5
 46a:	d0 e0       	ldi	r29, 0x00	; 0
 46c:	48 c0       	rjmp	.+144    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 46e:	84 e0       	ldi	r24, 0x04	; 4
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	21 df       	rcall	.-446    	; 0x2b6 <Timer>
 474:	88 23       	and	r24, r24
 476:	e1 f0       	breq	.+56     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 478:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 47c:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 480:	8a 30       	cpi	r24, 0x0A	; 10
 482:	91 05       	cpc	r25, r1
 484:	dc f4       	brge	.+54     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 48c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 490:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data>
 494:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <data+0x1>
 498:	a9 01       	movw	r20, r18
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49c:	55 95       	asr	r21
 49e:	47 95       	ror	r20
 4a0:	8a 95       	dec	r24
 4a2:	e2 f7       	brpl	.-8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4a4:	40 ff       	sbrs	r20, 0
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	8b b9       	out	0x0b, r24	; 11
 4ac:	01 c0       	rjmp	.+2      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ae:	1b b8       	out	0x0b, r1	; 11
 4b0:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 4b4:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 4b8:	0a 97       	sbiw	r24, 0x0a	; 10
 4ba:	0c f1       	brlt	.+66     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4bc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 4c0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 4c4:	c6 e0       	ldi	r28, 0x06	; 6
 4c6:	d0 e0       	ldi	r29, 0x00	; 0
 4c8:	1a c0       	rjmp	.+52     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	8b b9       	out	0x0b, r24	; 11
 4ce:	84 e0       	ldi	r24, 0x04	; 4
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	f1 de       	rcall	.-542    	; 0x2b6 <Timer>
 4d4:	88 23       	and	r24, r24
 4d6:	99 f0       	breq	.+38     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4d8:	1b b8       	out	0x0b, r1	; 11
 4da:	c0 e0       	ldi	r28, 0x00	; 0
 4dc:	d0 e0       	ldi	r29, 0x00	; 0
 4de:	0f c0       	rjmp	.+30     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 4e4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 4e8:	c4 e0       	ldi	r28, 0x04	; 4
 4ea:	d0 e0       	ldi	r29, 0x00	; 0
 4ec:	08 c0       	rjmp	.+16     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4ee:	c0 e0       	ldi	r28, 0x00	; 0
 4f0:	d0 e0       	ldi	r29, 0x00	; 0
 4f2:	05 c0       	rjmp	.+10     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f4:	c0 e0       	ldi	r28, 0x00	; 0
 4f6:	d0 e0       	ldi	r29, 0x00	; 0
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fa:	c4 e0       	ldi	r28, 0x04	; 4
 4fc:	d0 e0       	ldi	r29, 0x00	; 0
 4fe:	ce 01       	movw	r24, r28
 500:	df 91       	pop	r29
 502:	cf 91       	pop	r28
 504:	08 95       	ret

00000506 <main>:
	return state;
}


int main(void)
{
 506:	cf 93       	push	r28
 508:	df 93       	push	r29
 50a:	cd b7       	in	r28, 0x3d	; 61
 50c:	de b7       	in	r29, 0x3e	; 62
 50e:	2b 97       	sbiw	r28, 0x0b	; 11
 510:	0f b6       	in	r0, 0x3f	; 63
 512:	f8 94       	cli
 514:	de bf       	out	0x3e, r29	; 62
 516:	0f be       	out	0x3f, r0	; 63
 518:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; LEDOUT = 0x00; // ID LED's
 51a:	8f ef       	ldi	r24, 0xFF	; 255
 51c:	84 b9       	out	0x04, r24	; 4
 51e:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00; // RF Input and Output
 520:	8a b9       	out	0x0a, r24	; 10
 522:	1b b8       	out	0x0b, r1	; 11
	DDRA = 0x00; PORTA = 0xFF; // Temp Resistor
 524:	11 b8       	out	0x01, r1	; 1
 526:	82 b9       	out	0x02, r24	; 2
	//setupADC();
	//ADC_read();
	
	//unsigned short x =ADC_read(1);
	
	LEDOUT = ID;
 528:	81 e0       	ldi	r24, 0x01	; 1
 52a:	85 b9       	out	0x05, r24	; 5
	
	//Set_Clock(500);
	tasksNum = 1;
 52c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksNum>
	task tsks[1];
	tasks = tsks;
 530:	ce 01       	movw	r24, r28
 532:	01 96       	adiw	r24, 0x01	; 1
 534:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <tasks+0x1>
 538:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = Idle;
 53c:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].period = 1;
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	a0 e0       	ldi	r26, 0x00	; 0
 544:	b0 e0       	ldi	r27, 0x00	; 0
 546:	8a 83       	std	Y+2, r24	; 0x02
 548:	9b 83       	std	Y+3, r25	; 0x03
 54a:	ac 83       	std	Y+4, r26	; 0x04
 54c:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 54e:	8e 83       	std	Y+6, r24	; 0x06
 550:	9f 83       	std	Y+7, r25	; 0x07
 552:	a8 87       	std	Y+8, r26	; 0x08
 554:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 556:	8b e7       	ldi	r24, 0x7B	; 123
 558:	91 e0       	ldi	r25, 0x01	; 1
 55a:	9b 87       	std	Y+11, r25	; 0x0b
 55c:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 55e:	61 e0       	ldi	r22, 0x01	; 1
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	72 de       	rcall	.-796    	; 0x24c <TimerSet>
	TimerOn();
 568:	82 de       	rcall	.-764    	; 0x26e <TimerOn>
 56a:	ff cf       	rjmp	.-2      	; 0x56a <main+0x64>

0000056c <__tablejump2__>:
 56c:	ee 0f       	add	r30, r30
 56e:	ff 1f       	adc	r31, r31
 570:	00 24       	eor	r0, r0
 572:	00 1c       	adc	r0, r0
 574:	0b be       	out	0x3b, r0	; 59
 576:	07 90       	elpm	r0, Z+
 578:	f6 91       	elpm	r31, Z
 57a:	e0 2d       	mov	r30, r0
 57c:	09 94       	ijmp

0000057e <_exit>:
 57e:	f8 94       	cli

00000580 <__stop_program>:
 580:	ff cf       	rjmp	.-2      	; 0x580 <__stop_program>
