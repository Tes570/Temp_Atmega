
Transciver Custom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000057c  00000610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000057c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800104  00800104  00000614  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c01  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000094a  00000000  00000000  000012dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000537  00000000  00000000  00001c27  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00002160  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000528  00000000  00000000  0000227c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000049d  00000000  00000000  000027a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002c41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	52 c0       	rjmp	.+164    	; 0xa6 <__ctors_end>
   2:	00 00       	nop
   4:	6d c0       	rjmp	.+218    	; 0xe0 <__bad_interrupt>
   6:	00 00       	nop
   8:	6b c0       	rjmp	.+214    	; 0xe0 <__bad_interrupt>
   a:	00 00       	nop
   c:	69 c0       	rjmp	.+210    	; 0xe0 <__bad_interrupt>
   e:	00 00       	nop
  10:	67 c0       	rjmp	.+206    	; 0xe0 <__bad_interrupt>
  12:	00 00       	nop
  14:	65 c0       	rjmp	.+202    	; 0xe0 <__bad_interrupt>
  16:	00 00       	nop
  18:	63 c0       	rjmp	.+198    	; 0xe0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	61 c0       	rjmp	.+194    	; 0xe0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5f c0       	rjmp	.+190    	; 0xe0 <__bad_interrupt>
  22:	00 00       	nop
  24:	5d c0       	rjmp	.+186    	; 0xe0 <__bad_interrupt>
  26:	00 00       	nop
  28:	5b c0       	rjmp	.+182    	; 0xe0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	59 c0       	rjmp	.+178    	; 0xe0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	57 c0       	rjmp	.+174    	; 0xe0 <__bad_interrupt>
  32:	00 00       	nop
  34:	bf c0       	rjmp	.+382    	; 0x1b4 <__vector_13>
  36:	00 00       	nop
  38:	53 c0       	rjmp	.+166    	; 0xe0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	51 c0       	rjmp	.+162    	; 0xe0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4f c0       	rjmp	.+158    	; 0xe0 <__bad_interrupt>
  42:	00 00       	nop
  44:	4d c0       	rjmp	.+154    	; 0xe0 <__bad_interrupt>
  46:	00 00       	nop
  48:	4b c0       	rjmp	.+150    	; 0xe0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	49 c0       	rjmp	.+146    	; 0xe0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	47 c0       	rjmp	.+142    	; 0xe0 <__bad_interrupt>
  52:	00 00       	nop
  54:	45 c0       	rjmp	.+138    	; 0xe0 <__bad_interrupt>
  56:	00 00       	nop
  58:	43 c0       	rjmp	.+134    	; 0xe0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	41 c0       	rjmp	.+130    	; 0xe0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3f c0       	rjmp	.+126    	; 0xe0 <__bad_interrupt>
  62:	00 00       	nop
  64:	3d c0       	rjmp	.+122    	; 0xe0 <__bad_interrupt>
  66:	00 00       	nop
  68:	3b c0       	rjmp	.+118    	; 0xe0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	39 c0       	rjmp	.+114    	; 0xe0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	37 c0       	rjmp	.+110    	; 0xe0 <__bad_interrupt>
  72:	00 00       	nop
  74:	35 c0       	rjmp	.+106    	; 0xe0 <__bad_interrupt>
  76:	00 00       	nop
  78:	33 c0       	rjmp	.+102    	; 0xe0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	31 c0       	rjmp	.+98     	; 0xe0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2f c0       	rjmp	.+94     	; 0xe0 <__bad_interrupt>
  82:	00 00       	nop
  84:	2d c0       	rjmp	.+90     	; 0xe0 <__bad_interrupt>
  86:	00 00       	nop
  88:	2b c0       	rjmp	.+86     	; 0xe0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	89 01       	movw	r16, r18
  8e:	8d 01       	movw	r16, r26
  90:	9e 01       	movw	r18, r28
  92:	af 01       	movw	r20, r30
  94:	d5 01       	movw	r26, r10
  96:	e6 01       	movw	r28, r12
  98:	01 02       	muls	r16, r17
  9a:	27 02       	muls	r18, r23
  9c:	51 02       	muls	r21, r17
  9e:	7d 02       	muls	r23, r29
  a0:	7d 02       	muls	r23, r29
  a2:	5c 02       	muls	r21, r28
  a4:	64 02       	muls	r22, r20

000000a6 <__ctors_end>:
  a6:	11 24       	eor	r1, r1
  a8:	1f be       	out	0x3f, r1	; 63
  aa:	cf ef       	ldi	r28, 0xFF	; 255
  ac:	d0 e4       	ldi	r29, 0x40	; 64
  ae:	de bf       	out	0x3e, r29	; 62
  b0:	cd bf       	out	0x3d, r28	; 61

000000b2 <__do_copy_data>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	ec e7       	ldi	r30, 0x7C	; 124
  ba:	f5 e0       	ldi	r31, 0x05	; 5
  bc:	00 e0       	ldi	r16, 0x00	; 0
  be:	0b bf       	out	0x3b, r16	; 59
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <__do_copy_data+0x14>
  c2:	07 90       	elpm	r0, Z+
  c4:	0d 92       	st	X+, r0
  c6:	a4 30       	cpi	r26, 0x04	; 4
  c8:	b1 07       	cpc	r27, r17
  ca:	d9 f7       	brne	.-10     	; 0xc2 <__do_copy_data+0x10>

000000cc <__do_clear_bss>:
  cc:	21 e0       	ldi	r18, 0x01	; 1
  ce:	a4 e0       	ldi	r26, 0x04	; 4
  d0:	b1 e0       	ldi	r27, 0x01	; 1
  d2:	01 c0       	rjmp	.+2      	; 0xd6 <.do_clear_bss_start>

000000d4 <.do_clear_bss_loop>:
  d4:	1d 92       	st	X+, r1

000000d6 <.do_clear_bss_start>:
  d6:	a1 31       	cpi	r26, 0x11	; 17
  d8:	b2 07       	cpc	r27, r18
  da:	e1 f7       	brne	.-8      	; 0xd4 <.do_clear_bss_loop>
  dc:	12 d2       	rcall	.+1060   	; 0x502 <main>
  de:	4c c2       	rjmp	.+1176   	; 0x578 <_exit>

000000e0 <__bad_interrupt>:
  e0:	8f cf       	rjmp	.-226    	; 0x0 <__vectors>

000000e2 <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  e2:	cf 92       	push	r12
  e4:	df 92       	push	r13
  e6:	ef 92       	push	r14
  e8:	ff 92       	push	r15
  ea:	1f 93       	push	r17
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  f4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <tasksNum>
  f8:	88 23       	and	r24, r24
  fa:	09 f4       	brne	.+2      	; 0xfe <TimerISR+0x1c>
  fc:	53 c0       	rjmp	.+166    	; 0x1a4 <TimerISR+0xc2>
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	1b e0       	ldi	r17, 0x0B	; 11
 102:	c0 91 0f 01 	lds	r28, 0x010F	; 0x80010f <tasks>
 106:	d0 91 10 01 	lds	r29, 0x0110	; 0x800110 <tasks+0x1>
 10a:	18 9f       	mul	r17, r24
 10c:	c0 0d       	add	r28, r0
 10e:	d1 1d       	adc	r29, r1
 110:	11 24       	eor	r1, r1
 112:	4d 81       	ldd	r20, Y+5	; 0x05
 114:	5e 81       	ldd	r21, Y+6	; 0x06
 116:	6f 81       	ldd	r22, Y+7	; 0x07
 118:	78 85       	ldd	r23, Y+8	; 0x08
 11a:	89 81       	ldd	r24, Y+1	; 0x01
 11c:	9a 81       	ldd	r25, Y+2	; 0x02
 11e:	ab 81       	ldd	r26, Y+3	; 0x03
 120:	bc 81       	ldd	r27, Y+4	; 0x04
 122:	48 17       	cp	r20, r24
 124:	59 07       	cpc	r21, r25
 126:	6a 07       	cpc	r22, r26
 128:	7b 07       	cpc	r23, r27
 12a:	b0 f0       	brcs	.+44     	; 0x158 <TimerISR+0x76>
 12c:	88 81       	ld	r24, Y
 12e:	e9 85       	ldd	r30, Y+9	; 0x09
 130:	fa 85       	ldd	r31, Y+10	; 0x0a
 132:	08 2e       	mov	r0, r24
 134:	00 0c       	add	r0, r0
 136:	99 0b       	sbc	r25, r25
 138:	09 95       	icall
 13a:	88 83       	st	Y, r24
 13c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 140:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <tasks>
 144:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <tasks+0x1>
 148:	18 9f       	mul	r17, r24
 14a:	e0 0d       	add	r30, r0
 14c:	f1 1d       	adc	r31, r1
 14e:	11 24       	eor	r1, r1
 150:	15 82       	std	Z+5, r1	; 0x05
 152:	16 82       	std	Z+6, r1	; 0x06
 154:	17 82       	std	Z+7, r1	; 0x07
 156:	10 86       	std	Z+8, r1	; 0x08
 158:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 15c:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <tasks>
 160:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <tasks+0x1>
 164:	18 9f       	mul	r17, r24
 166:	e0 0d       	add	r30, r0
 168:	f1 1d       	adc	r31, r1
 16a:	11 24       	eor	r1, r1
 16c:	c5 80       	ldd	r12, Z+5	; 0x05
 16e:	d6 80       	ldd	r13, Z+6	; 0x06
 170:	e7 80       	ldd	r14, Z+7	; 0x07
 172:	f0 84       	ldd	r15, Z+8	; 0x08
 174:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 178:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 17c:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 180:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 184:	4c 0d       	add	r20, r12
 186:	5d 1d       	adc	r21, r13
 188:	6e 1d       	adc	r22, r14
 18a:	7f 1d       	adc	r23, r15
 18c:	45 83       	std	Z+5, r20	; 0x05
 18e:	56 83       	std	Z+6, r21	; 0x06
 190:	67 83       	std	Z+7, r22	; 0x07
 192:	70 87       	std	Z+8, r23	; 0x08
 194:	8f 5f       	subi	r24, 0xFF	; 255
 196:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 19a:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <tasksNum>
 19e:	89 17       	cp	r24, r25
 1a0:	08 f4       	brcc	.+2      	; 0x1a4 <TimerISR+0xc2>
 1a2:	af cf       	rjmp	.-162    	; 0x102 <TimerISR+0x20>
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	1f 91       	pop	r17
 1aa:	ff 90       	pop	r15
 1ac:	ef 90       	pop	r14
 1ae:	df 90       	pop	r13
 1b0:	cf 90       	pop	r12
 1b2:	08 95       	ret

000001b4 <__vector_13>:
 1b4:	1f 92       	push	r1
 1b6:	0f 92       	push	r0
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	0f 92       	push	r0
 1bc:	11 24       	eor	r1, r1
 1be:	0b b6       	in	r0, 0x3b	; 59
 1c0:	0f 92       	push	r0
 1c2:	2f 93       	push	r18
 1c4:	3f 93       	push	r19
 1c6:	4f 93       	push	r20
 1c8:	5f 93       	push	r21
 1ca:	6f 93       	push	r22
 1cc:	7f 93       	push	r23
 1ce:	8f 93       	push	r24
 1d0:	9f 93       	push	r25
 1d2:	af 93       	push	r26
 1d4:	bf 93       	push	r27
 1d6:	ef 93       	push	r30
 1d8:	ff 93       	push	r31
 1da:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <tasksPeriodCntDown>
 1de:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <tasksPeriodCntDown+0x1>
 1e2:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <tasksPeriodCntDown+0x2>
 1e6:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <tasksPeriodCntDown+0x3>
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	a1 09       	sbc	r26, r1
 1ee:	b1 09       	sbc	r27, r1
 1f0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 1f4:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 1f8:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 1fc:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 200:	89 2b       	or	r24, r25
 202:	8a 2b       	or	r24, r26
 204:	8b 2b       	or	r24, r27
 206:	89 f4       	brne	.+34     	; 0x22a <__vector_13+0x76>
 208:	6c df       	rcall	.-296    	; 0xe2 <TimerISR>
 20a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 20e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 212:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 216:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 21a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 21e:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 222:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 226:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 22a:	ff 91       	pop	r31
 22c:	ef 91       	pop	r30
 22e:	bf 91       	pop	r27
 230:	af 91       	pop	r26
 232:	9f 91       	pop	r25
 234:	8f 91       	pop	r24
 236:	7f 91       	pop	r23
 238:	6f 91       	pop	r22
 23a:	5f 91       	pop	r21
 23c:	4f 91       	pop	r20
 23e:	3f 91       	pop	r19
 240:	2f 91       	pop	r18
 242:	0f 90       	pop	r0
 244:	0b be       	out	0x3b, r0	; 59
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <TimerSet>:
 250:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 254:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 258:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 25c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 260:	60 93 0b 01 	sts	0x010B, r22	; 0x80010b <tasksPeriodCntDown>
 264:	70 93 0c 01 	sts	0x010C, r23	; 0x80010c <tasksPeriodCntDown+0x1>
 268:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksPeriodCntDown+0x2>
 26c:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <tasksPeriodCntDown+0x3>
 270:	08 95       	ret

00000272 <TimerOn>:
 272:	8b e0       	ldi	r24, 0x0B	; 11
 274:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 278:	87 e0       	ldi	r24, 0x07	; 7
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 280:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 284:	82 e0       	ldi	r24, 0x02	; 2
 286:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 28a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 28e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 296:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 29a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 29e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2a2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksPeriodCntDown>
 2a6:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <tasksPeriodCntDown+0x1>
 2aa:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <tasksPeriodCntDown+0x2>
 2ae:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <tasksPeriodCntDown+0x3>
 2b2:	8f b7       	in	r24, 0x3f	; 63
 2b4:	80 68       	ori	r24, 0x80	; 128
 2b6:	8f bf       	out	0x3f, r24	; 63
 2b8:	08 95       	ret

000002ba <Timer>:
 2ba:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <time>
 2be:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <time+0x1>
 2c2:	21 15       	cp	r18, r1
 2c4:	31 05       	cpc	r19, r1
 2c6:	41 f4       	brne	.+16     	; 0x2d8 <Timer+0x1e>
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <time+0x1>
 2d0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <time>
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	08 95       	ret
 2d8:	28 17       	cp	r18, r24
 2da:	39 07       	cpc	r19, r25
 2dc:	30 f0       	brcs	.+12     	; 0x2ea <Timer+0x30>
 2de:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time+0x1>
 2e2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <time>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	08 95       	ret
 2ea:	2f 5f       	subi	r18, 0xFF	; 255
 2ec:	3f 4f       	sbci	r19, 0xFF	; 255
 2ee:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <time+0x1>
 2f2:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <time>
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	08 95       	ret

000002fa <TickFct_Leader>:
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	ec 01       	movw	r28, r24
 300:	fc 01       	movw	r30, r24
 302:	31 96       	adiw	r30, 0x01	; 1
 304:	ed 30       	cpi	r30, 0x0D	; 13
 306:	f1 05       	cpc	r31, r1
 308:	08 f0       	brcs	.+2      	; 0x30c <TickFct_Leader+0x12>
 30a:	f7 c0       	rjmp	.+494    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 30c:	ea 5b       	subi	r30, 0xBA	; 186
 30e:	ff 4f       	sbci	r31, 0xFF	; 255
 310:	2a c1       	rjmp	.+596    	; 0x566 <__tablejump2__>
 312:	1b b8       	out	0x0b, r1	; 11
 314:	c0 e0       	ldi	r28, 0x00	; 0
 316:	d0 e0       	ldi	r29, 0x00	; 0
 318:	f0 c0       	rjmp	.+480    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 31a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 31e:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 322:	15 b8       	out	0x05, r1	; 5
 324:	84 e0       	ldi	r24, 0x04	; 4
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	c8 df       	rcall	.-112    	; 0x2ba <Timer>
 32a:	88 23       	and	r24, r24
 32c:	09 f4       	brne	.+2      	; 0x330 <TickFct_Leader+0x36>
 32e:	e5 c0       	rjmp	.+458    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 330:	83 e1       	ldi	r24, 0x13	; 19
 332:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 336:	c5 e0       	ldi	r28, 0x05	; 5
 338:	d0 e0       	ldi	r29, 0x00	; 0
 33a:	df c0       	rjmp	.+446    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 33c:	84 e0       	ldi	r24, 0x04	; 4
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	bc df       	rcall	.-136    	; 0x2ba <Timer>
 342:	88 23       	and	r24, r24
 344:	09 f4       	brne	.+2      	; 0x348 <TickFct_Leader+0x4e>
 346:	d9 c0       	rjmp	.+434    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 348:	00 9b       	sbis	0x00, 0	; 0
 34a:	c9 c0       	rjmp	.+402    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 34c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 350:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 354:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 358:	c2 e0       	ldi	r28, 0x02	; 2
 35a:	d0 e0       	ldi	r29, 0x00	; 0
 35c:	ce c0       	rjmp	.+412    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 35e:	84 e0       	ldi	r24, 0x04	; 4
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	ab df       	rcall	.-170    	; 0x2ba <Timer>
 364:	88 23       	and	r24, r24
 366:	09 f4       	brne	.+2      	; 0x36a <TickFct_Leader+0x70>
 368:	c8 c0       	rjmp	.+400    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 36a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 36e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 372:	88 30       	cpi	r24, 0x08	; 8
 374:	91 05       	cpc	r25, r1
 376:	0c f0       	brlt	.+2      	; 0x37a <TickFct_Leader+0x80>
 378:	b5 c0       	rjmp	.+362    	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 37a:	00 9b       	sbis	0x00, 0	; 0
 37c:	10 c0       	rjmp	.+32     	; 0x39e <TickFct_Leader+0xa4>
 37e:	47 e0       	ldi	r20, 0x07	; 7
 380:	50 e0       	ldi	r21, 0x00	; 0
 382:	48 1b       	sub	r20, r24
 384:	59 0b       	sbc	r21, r25
 386:	20 e8       	ldi	r18, 0x80	; 128
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <TickFct_Leader+0x96>
 38c:	35 95       	asr	r19
 38e:	27 95       	ror	r18
 390:	4a 95       	dec	r20
 392:	e2 f7       	brpl	.-8      	; 0x38c <TickFct_Leader+0x92>
 394:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <data>
 398:	23 0f       	add	r18, r19
 39a:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 39e:	01 96       	adiw	r24, 0x01	; 1
 3a0:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 3a4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 3a8:	a8 c0       	rjmp	.+336    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 3aa:	84 e0       	ldi	r24, 0x04	; 4
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	85 df       	rcall	.-246    	; 0x2ba <Timer>
 3b0:	88 23       	and	r24, r24
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <TickFct_Leader+0xbc>
 3b4:	a2 c0       	rjmp	.+324    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 3b6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3ba:	85 b9       	out	0x05, r24	; 5
 3bc:	00 99       	sbic	0x00, 0	; 0
 3be:	95 c0       	rjmp	.+298    	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 3c0:	8f ef       	ldi	r24, 0xFF	; 255
 3c2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3c6:	c0 e0       	ldi	r28, 0x00	; 0
 3c8:	d0 e0       	ldi	r29, 0x00	; 0
 3ca:	97 c0       	rjmp	.+302    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 3cc:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3d0:	88 23       	and	r24, r24
 3d2:	09 f4       	brne	.+2      	; 0x3d6 <TickFct_Leader+0xdc>
 3d4:	8d c0       	rjmp	.+282    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 3d6:	98 2f       	mov	r25, r24
 3d8:	90 7c       	andi	r25, 0xC0	; 192
 3da:	51 f4       	brne	.+20     	; 0x3f0 <TickFct_Leader+0xf6>
 3dc:	83 70       	andi	r24, 0x03	; 3
 3de:	81 30       	cpi	r24, 0x01	; 1
 3e0:	09 f0       	breq	.+2      	; 0x3e4 <TickFct_Leader+0xea>
 3e2:	8b c0       	rjmp	.+278    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 3e4:	81 e4       	ldi	r24, 0x41	; 65
 3e6:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3ea:	c5 e0       	ldi	r28, 0x05	; 5
 3ec:	d0 e0       	ldi	r29, 0x00	; 0
 3ee:	85 c0       	rjmp	.+266    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 3f0:	90 38       	cpi	r25, 0x80	; 128
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <TickFct_Leader+0xfc>
 3f4:	82 c0       	rjmp	.+260    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 3f6:	81 ec       	ldi	r24, 0xC1	; 193
 3f8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 3fc:	c5 e0       	ldi	r28, 0x05	; 5
 3fe:	d0 e0       	ldi	r29, 0x00	; 0
 400:	7c c0       	rjmp	.+248    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	8b b9       	out	0x0b, r24	; 11
 406:	84 e0       	ldi	r24, 0x04	; 4
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	57 df       	rcall	.-338    	; 0x2ba <Timer>
 40c:	88 23       	and	r24, r24
 40e:	09 f4       	brne	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 410:	74 c0       	rjmp	.+232    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 412:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 416:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 41a:	18 16       	cp	r1, r24
 41c:	19 06       	cpc	r1, r25
 41e:	34 f0       	brlt	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 420:	01 96       	adiw	r24, 0x01	; 1
 422:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 426:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 42a:	67 c0       	rjmp	.+206    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 42c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate+0x1>
 430:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <Tstate>
 434:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 438:	80 ff       	sbrs	r24, 0
 43a:	05 c0       	rjmp	.+10     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	8b b9       	out	0x0b, r24	; 11
 440:	c6 e0       	ldi	r28, 0x06	; 6
 442:	d0 e0       	ldi	r29, 0x00	; 0
 444:	5a c0       	rjmp	.+180    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 446:	1b b8       	out	0x0b, r1	; 11
 448:	c6 e0       	ldi	r28, 0x06	; 6
 44a:	d0 e0       	ldi	r29, 0x00	; 0
 44c:	56 c0       	rjmp	.+172    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 44e:	84 e0       	ldi	r24, 0x04	; 4
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	33 df       	rcall	.-410    	; 0x2ba <Timer>
 454:	88 23       	and	r24, r24
 456:	e1 f0       	breq	.+56     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 458:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 45c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 460:	88 30       	cpi	r24, 0x08	; 8
 462:	91 05       	cpc	r25, r1
 464:	0c f0       	brlt	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 466:	47 c0       	rjmp	.+142    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 468:	01 96       	adiw	r24, 0x01	; 1
 46a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <Tstate+0x1>
 46e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <Tstate>
 472:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <data>
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	a9 01       	movw	r20, r18
 47a:	02 c0       	rjmp	.+4      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47c:	55 95       	asr	r21
 47e:	47 95       	ror	r20
 480:	8a 95       	dec	r24
 482:	e2 f7       	brpl	.-8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 484:	40 ff       	sbrs	r20, 0
 486:	03 c0       	rjmp	.+6      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	8b b9       	out	0x0b, r24	; 11
 48c:	01 c0       	rjmp	.+2      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 48e:	1b b8       	out	0x0b, r1	; 11
 490:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <Tstate>
 494:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <Tstate+0x1>
 498:	08 97       	sbiw	r24, 0x08	; 8
 49a:	7c f1       	brlt	.+94     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 49c:	c7 e0       	ldi	r28, 0x07	; 7
 49e:	d0 e0       	ldi	r29, 0x00	; 0
 4a0:	2c c0       	rjmp	.+88     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	8b b9       	out	0x0b, r24	; 11
 4a6:	84 e0       	ldi	r24, 0x04	; 4
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	07 df       	rcall	.-498    	; 0x2ba <Timer>
 4ac:	88 23       	and	r24, r24
 4ae:	29 f1       	breq	.+74     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4b0:	1b b8       	out	0x0b, r1	; 11
 4b2:	ca e0       	ldi	r28, 0x0A	; 10
 4b4:	d0 e0       	ldi	r29, 0x00	; 0
 4b6:	21 c0       	rjmp	.+66     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4b8:	88 ec       	ldi	r24, 0xC8	; 200
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	fe de       	rcall	.-516    	; 0x2ba <Timer>
 4be:	88 23       	and	r24, r24
 4c0:	e1 f0       	breq	.+56     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4c2:	c0 e0       	ldi	r28, 0x00	; 0
 4c4:	d0 e0       	ldi	r29, 0x00	; 0
 4c6:	19 c0       	rjmp	.+50     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4c8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 4cc:	85 b9       	out	0x05, r24	; 5
 4ce:	80 ed       	ldi	r24, 0xD0	; 208
 4d0:	97 e0       	ldi	r25, 0x07	; 7
 4d2:	f3 de       	rcall	.-538    	; 0x2ba <Timer>
 4d4:	88 23       	and	r24, r24
 4d6:	89 f0       	breq	.+34     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4d8:	c0 e0       	ldi	r28, 0x00	; 0
 4da:	d0 e0       	ldi	r29, 0x00	; 0
 4dc:	0e c0       	rjmp	.+28     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4de:	c0 e0       	ldi	r28, 0x00	; 0
 4e0:	d0 e0       	ldi	r29, 0x00	; 0
 4e2:	0b c0       	rjmp	.+22     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4e4:	c3 e0       	ldi	r28, 0x03	; 3
 4e6:	d0 e0       	ldi	r29, 0x00	; 0
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ea:	cb e0       	ldi	r28, 0x0B	; 11
 4ec:	d0 e0       	ldi	r29, 0x00	; 0
 4ee:	05 c0       	rjmp	.+10     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f0:	c0 e0       	ldi	r28, 0x00	; 0
 4f2:	d0 e0       	ldi	r29, 0x00	; 0
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f6:	c7 e0       	ldi	r28, 0x07	; 7
 4f8:	d0 e0       	ldi	r29, 0x00	; 0
 4fa:	ce 01       	movw	r24, r28
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	08 95       	ret

00000502 <main>:
	return state;
}


int main(void)
{
 502:	cf 93       	push	r28
 504:	df 93       	push	r29
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
 50a:	2b 97       	sbiw	r28, 0x0b	; 11
 50c:	0f b6       	in	r0, 0x3f	; 63
 50e:	f8 94       	cli
 510:	de bf       	out	0x3e, r29	; 62
 512:	0f be       	out	0x3f, r0	; 63
 514:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; PORTB = 0x00; // ID LED's
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	84 b9       	out	0x04, r24	; 4
 51a:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00; // RF Input and Output
 51c:	8a b9       	out	0x0a, r24	; 10
 51e:	1b b8       	out	0x0b, r1	; 11
	DDRA = 0x00; PORTA = 0xFF; // Temp Resistor
 520:	11 b8       	out	0x01, r1	; 1
 522:	82 b9       	out	0x02, r24	; 2
	//DDRC = 0xFF; PORTC = 0x00; // ID LED's
	
	//PORTB = ID;
	
	//Set_Clock(500);
	tasksNum = 1;
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <tasksNum>
	task tsks[1];
	tasks = tsks;
 52a:	ce 01       	movw	r24, r28
 52c:	01 96       	adiw	r24, 0x01	; 1
 52e:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <tasks+0x1>
 532:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = Idle;
 536:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].period = 1;
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	a0 e0       	ldi	r26, 0x00	; 0
 53e:	b0 e0       	ldi	r27, 0x00	; 0
 540:	8a 83       	std	Y+2, r24	; 0x02
 542:	9b 83       	std	Y+3, r25	; 0x03
 544:	ac 83       	std	Y+4, r26	; 0x04
 546:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 548:	8e 83       	std	Y+6, r24	; 0x06
 54a:	9f 83       	std	Y+7, r25	; 0x07
 54c:	a8 87       	std	Y+8, r26	; 0x08
 54e:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 550:	8d e7       	ldi	r24, 0x7D	; 125
 552:	91 e0       	ldi	r25, 0x01	; 1
 554:	9b 87       	std	Y+11, r25	; 0x0b
 556:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 558:	61 e0       	ldi	r22, 0x01	; 1
 55a:	70 e0       	ldi	r23, 0x00	; 0
 55c:	80 e0       	ldi	r24, 0x00	; 0
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	77 de       	rcall	.-786    	; 0x250 <TimerSet>
	TimerOn();
 562:	87 de       	rcall	.-754    	; 0x272 <TimerOn>
 564:	ff cf       	rjmp	.-2      	; 0x564 <main+0x62>

00000566 <__tablejump2__>:
 566:	ee 0f       	add	r30, r30
 568:	ff 1f       	adc	r31, r31
 56a:	00 24       	eor	r0, r0
 56c:	00 1c       	adc	r0, r0
 56e:	0b be       	out	0x3b, r0	; 59
 570:	07 90       	elpm	r0, Z+
 572:	f6 91       	elpm	r31, Z
 574:	e0 2d       	mov	r30, r0
 576:	09 94       	ijmp

00000578 <_exit>:
 578:	f8 94       	cli

0000057a <__stop_program>:
 57a:	ff cf       	rjmp	.-2      	; 0x57a <__stop_program>
