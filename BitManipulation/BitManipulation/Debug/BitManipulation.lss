
BitManipulation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000490  00000524  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000490  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800104  00800104  00000528  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000558  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b41  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000939  00000000  00000000  00001131  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000048d  00000000  00000000  00001a6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00001ef8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000520  00000000  00000000  00002014  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000036f  00000000  00000000  00002534  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000028a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	b2 c0       	rjmp	.+356    	; 0x19a <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e9       	ldi	r30, 0x90	; 144
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 31       	cpi	r26, 0x14	; 20
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	b0 d1       	rcall	.+864    	; 0x424 <main>
  c4:	e3 c1       	rjmp	.+966    	; 0x48c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerISR>:
}

bool Start()
{
	return time == 0;
}
  c8:	cf 92       	push	r12
  ca:	df 92       	push	r13
  cc:	ef 92       	push	r14
  ce:	ff 92       	push	r15
  d0:	1f 93       	push	r17
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
  da:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <tasksNum>
  de:	88 23       	and	r24, r24
  e0:	09 f4       	brne	.+2      	; 0xe4 <TimerISR+0x1c>
  e2:	53 c0       	rjmp	.+166    	; 0x18a <TimerISR+0xc2>
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	1b e0       	ldi	r17, 0x0B	; 11
  e8:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <tasks>
  ec:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <tasks+0x1>
  f0:	18 9f       	mul	r17, r24
  f2:	c0 0d       	add	r28, r0
  f4:	d1 1d       	adc	r29, r1
  f6:	11 24       	eor	r1, r1
  f8:	4d 81       	ldd	r20, Y+5	; 0x05
  fa:	5e 81       	ldd	r21, Y+6	; 0x06
  fc:	6f 81       	ldd	r22, Y+7	; 0x07
  fe:	78 85       	ldd	r23, Y+8	; 0x08
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	9a 81       	ldd	r25, Y+2	; 0x02
 104:	ab 81       	ldd	r26, Y+3	; 0x03
 106:	bc 81       	ldd	r27, Y+4	; 0x04
 108:	48 17       	cp	r20, r24
 10a:	59 07       	cpc	r21, r25
 10c:	6a 07       	cpc	r22, r26
 10e:	7b 07       	cpc	r23, r27
 110:	b0 f0       	brcs	.+44     	; 0x13e <TimerISR+0x76>
 112:	88 81       	ld	r24, Y
 114:	e9 85       	ldd	r30, Y+9	; 0x09
 116:	fa 85       	ldd	r31, Y+10	; 0x0a
 118:	08 2e       	mov	r0, r24
 11a:	00 0c       	add	r0, r0
 11c:	99 0b       	sbc	r25, r25
 11e:	09 95       	icall
 120:	88 83       	st	Y, r24
 122:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 126:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <tasks>
 12a:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <tasks+0x1>
 12e:	18 9f       	mul	r17, r24
 130:	e0 0d       	add	r30, r0
 132:	f1 1d       	adc	r31, r1
 134:	11 24       	eor	r1, r1
 136:	15 82       	std	Z+5, r1	; 0x05
 138:	16 82       	std	Z+6, r1	; 0x06
 13a:	17 82       	std	Z+7, r1	; 0x07
 13c:	10 86       	std	Z+8, r1	; 0x08
 13e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 142:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <tasks>
 146:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <tasks+0x1>
 14a:	18 9f       	mul	r17, r24
 14c:	e0 0d       	add	r30, r0
 14e:	f1 1d       	adc	r31, r1
 150:	11 24       	eor	r1, r1
 152:	c5 80       	ldd	r12, Z+5	; 0x05
 154:	d6 80       	ldd	r13, Z+6	; 0x06
 156:	e7 80       	ldd	r14, Z+7	; 0x07
 158:	f0 84       	ldd	r15, Z+8	; 0x08
 15a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 15e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 162:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 166:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 16a:	4c 0d       	add	r20, r12
 16c:	5d 1d       	adc	r21, r13
 16e:	6e 1d       	adc	r22, r14
 170:	7f 1d       	adc	r23, r15
 172:	45 83       	std	Z+5, r20	; 0x05
 174:	56 83       	std	Z+6, r21	; 0x06
 176:	67 83       	std	Z+7, r22	; 0x07
 178:	70 87       	std	Z+8, r23	; 0x08
 17a:	8f 5f       	subi	r24, 0xFF	; 255
 17c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 180:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <tasksNum>
 184:	89 17       	cp	r24, r25
 186:	08 f4       	brcc	.+2      	; 0x18a <TimerISR+0xc2>
 188:	af cf       	rjmp	.-162    	; 0xe8 <TimerISR+0x20>
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	ff 90       	pop	r15
 192:	ef 90       	pop	r14
 194:	df 90       	pop	r13
 196:	cf 90       	pop	r12
 198:	08 95       	ret

0000019a <__vector_13>:
 19a:	1f 92       	push	r1
 19c:	0f 92       	push	r0
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	0f 92       	push	r0
 1a2:	11 24       	eor	r1, r1
 1a4:	0b b6       	in	r0, 0x3b	; 59
 1a6:	0f 92       	push	r0
 1a8:	2f 93       	push	r18
 1aa:	3f 93       	push	r19
 1ac:	4f 93       	push	r20
 1ae:	5f 93       	push	r21
 1b0:	6f 93       	push	r22
 1b2:	7f 93       	push	r23
 1b4:	8f 93       	push	r24
 1b6:	9f 93       	push	r25
 1b8:	af 93       	push	r26
 1ba:	bf 93       	push	r27
 1bc:	ef 93       	push	r30
 1be:	ff 93       	push	r31
 1c0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <tasksPeriodCntDown>
 1c4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <tasksPeriodCntDown+0x1>
 1c8:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <tasksPeriodCntDown+0x2>
 1cc:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <tasksPeriodCntDown+0x3>
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	a1 09       	sbc	r26, r1
 1d4:	b1 09       	sbc	r27, r1
 1d6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 1da:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 1de:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 1e2:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 1e6:	89 2b       	or	r24, r25
 1e8:	8a 2b       	or	r24, r26
 1ea:	8b 2b       	or	r24, r27
 1ec:	89 f4       	brne	.+34     	; 0x210 <__vector_13+0x76>
 1ee:	6c df       	rcall	.-296    	; 0xc8 <TimerISR>
 1f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1f8:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1fc:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 200:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 204:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 208:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 20c:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 210:	ff 91       	pop	r31
 212:	ef 91       	pop	r30
 214:	bf 91       	pop	r27
 216:	af 91       	pop	r26
 218:	9f 91       	pop	r25
 21a:	8f 91       	pop	r24
 21c:	7f 91       	pop	r23
 21e:	6f 91       	pop	r22
 220:	5f 91       	pop	r21
 222:	4f 91       	pop	r20
 224:	3f 91       	pop	r19
 226:	2f 91       	pop	r18
 228:	0f 90       	pop	r0
 22a:	0b be       	out	0x3b, r0	; 59
 22c:	0f 90       	pop	r0
 22e:	0f be       	out	0x3f, r0	; 63
 230:	0f 90       	pop	r0
 232:	1f 90       	pop	r1
 234:	18 95       	reti

00000236 <TimerSet>:
 236:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 23a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 23e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 242:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 246:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <tasksPeriodCntDown>
 24a:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <tasksPeriodCntDown+0x1>
 24e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown+0x2>
 252:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x3>
 256:	08 95       	ret

00000258 <TimerOn>:
 258:	8b e0       	ldi	r24, 0x0B	; 11
 25a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 25e:	87 e0       	ldi	r24, 0x07	; 7
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 266:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 26a:	82 e0       	ldi	r24, 0x02	; 2
 26c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 270:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 274:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 278:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 27c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 280:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 284:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 288:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tasksPeriodCntDown>
 28c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tasksPeriodCntDown+0x1>
 290:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <tasksPeriodCntDown+0x2>
 294:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <tasksPeriodCntDown+0x3>
 298:	8f b7       	in	r24, 0x3f	; 63
 29a:	80 68       	ori	r24, 0x80	; 128
 29c:	8f bf       	out	0x3f, r24	; 63
 29e:	08 95       	ret

000002a0 <Timer>:
 2a0:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <time>
 2a4:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <time+0x1>
 2a8:	21 15       	cp	r18, r1
 2aa:	31 05       	cpc	r19, r1
 2ac:	41 f4       	brne	.+16     	; 0x2be <Timer+0x1e>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <time+0x1>
 2b6:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <time>
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	08 95       	ret
 2be:	28 17       	cp	r18, r24
 2c0:	39 07       	cpc	r19, r25
 2c2:	30 f0       	brcs	.+12     	; 0x2d0 <Timer+0x30>
 2c4:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <time+0x1>
 2c8:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <time>
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	08 95       	ret
 2d0:	2f 5f       	subi	r18, 0xFF	; 255
 2d2:	3f 4f       	sbci	r19, 0xFF	; 255
 2d4:	30 93 0a 01 	sts	0x010A, r19	; 0x80010a <time+0x1>
 2d8:	20 93 09 01 	sts	0x0109, r18	; 0x800109 <time>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	08 95       	ret

000002e0 <TickFct_Leader>:
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	ec 01       	movw	r28, r24
 2e6:	81 30       	cpi	r24, 0x01	; 1
 2e8:	91 05       	cpc	r25, r1
 2ea:	09 f1       	breq	.+66     	; 0x32e <TickFct_Leader+0x4e>
 2ec:	3c f4       	brge	.+14     	; 0x2fc <TickFct_Leader+0x1c>
 2ee:	cf 3f       	cpi	r28, 0xFF	; 255
 2f0:	8f ef       	ldi	r24, 0xFF	; 255
 2f2:	d8 07       	cpc	r29, r24
 2f4:	61 f0       	breq	.+24     	; 0x30e <TickFct_Leader+0x2e>
 2f6:	20 97       	sbiw	r28, 0x00	; 0
 2f8:	71 f0       	breq	.+28     	; 0x316 <TickFct_Leader+0x36>
 2fa:	90 c0       	rjmp	.+288    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 2fc:	83 30       	cpi	r24, 0x03	; 3
 2fe:	91 05       	cpc	r25, r1
 300:	09 f4       	brne	.+2      	; 0x304 <TickFct_Leader+0x24>
 302:	6a c0       	rjmp	.+212    	; 0x3d8 <TickFct_Leader+0xf8>
 304:	74 f1       	brlt	.+92     	; 0x362 <TickFct_Leader+0x82>
 306:	09 97       	sbiw	r24, 0x09	; 9
 308:	09 f4       	brne	.+2      	; 0x30c <TickFct_Leader+0x2c>
 30a:	78 c0       	rjmp	.+240    	; 0x3fc <TickFct_Leader+0x11c>
 30c:	87 c0       	rjmp	.+270    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 30e:	15 b8       	out	0x05, r1	; 5
 310:	c0 e0       	ldi	r28, 0x00	; 0
 312:	d0 e0       	ldi	r29, 0x00	; 0
 314:	83 c0       	rjmp	.+262    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 316:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 31a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <data+0x1>
 326:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <data>
 32a:	85 b9       	out	0x05, r24	; 5
 32c:	77 c0       	rjmp	.+238    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 32e:	84 e0       	ldi	r24, 0x04	; 4
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	b6 df       	rcall	.-148    	; 0x2a0 <Timer>
 334:	88 23       	and	r24, r24
 336:	09 f4       	brne	.+2      	; 0x33a <TickFct_Leader+0x5a>
 338:	71 c0       	rjmp	.+226    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 33a:	00 9b       	sbis	0x00, 0	; 0
 33c:	0b c0       	rjmp	.+22     	; 0x354 <TickFct_Leader+0x74>
 33e:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 342:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 346:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 34a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 34e:	c2 e0       	ldi	r28, 0x02	; 2
 350:	d0 e0       	ldi	r29, 0x00	; 0
 352:	64 c0       	rjmp	.+200    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 354:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 358:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 35c:	c0 e0       	ldi	r28, 0x00	; 0
 35e:	d0 e0       	ldi	r29, 0x00	; 0
 360:	5d c0       	rjmp	.+186    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 362:	84 e0       	ldi	r24, 0x04	; 4
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	9c df       	rcall	.-200    	; 0x2a0 <Timer>
 368:	88 23       	and	r24, r24
 36a:	09 f4       	brne	.+2      	; 0x36e <TickFct_Leader+0x8e>
 36c:	57 c0       	rjmp	.+174    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 36e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <Tstate>
 372:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <Tstate+0x1>
 376:	8a 30       	cpi	r24, 0x0A	; 10
 378:	91 05       	cpc	r25, r1
 37a:	d4 f4       	brge	.+52     	; 0x3b0 <TickFct_Leader+0xd0>
 37c:	00 9b       	sbis	0x00, 0	; 0
 37e:	12 c0       	rjmp	.+36     	; 0x3a4 <TickFct_Leader+0xc4>
 380:	21 e0       	ldi	r18, 0x01	; 1
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	08 2e       	mov	r0, r24
 386:	02 c0       	rjmp	.+4      	; 0x38c <TickFct_Leader+0xac>
 388:	22 0f       	add	r18, r18
 38a:	33 1f       	adc	r19, r19
 38c:	0a 94       	dec	r0
 38e:	e2 f7       	brpl	.-8      	; 0x388 <TickFct_Leader+0xa8>
 390:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <data>
 394:	50 91 06 01 	lds	r21, 0x0106	; 0x800106 <data+0x1>
 398:	24 2b       	or	r18, r20
 39a:	35 2b       	or	r19, r21
 39c:	30 93 06 01 	sts	0x0106, r19	; 0x800106 <data+0x1>
 3a0:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <data>
 3a4:	01 96       	adiw	r24, 0x01	; 1
 3a6:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <Tstate+0x1>
 3aa:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <Tstate>
 3ae:	36 c0       	rjmp	.+108    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3b0:	00 9b       	sbis	0x00, 0	; 0
 3b2:	07 c0       	rjmp	.+14     	; 0x3c2 <TickFct_Leader+0xe2>
 3b4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 3b8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 3bc:	c3 e0       	ldi	r28, 0x03	; 3
 3be:	d0 e0       	ldi	r29, 0x00	; 0
 3c0:	2d c0       	rjmp	.+90     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3c2:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <data+0x1>
 3c6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <data>
 3ca:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 3ce:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 3d2:	c0 e0       	ldi	r28, 0x00	; 0
 3d4:	d0 e0       	ldi	r29, 0x00	; 0
 3d6:	22 c0       	rjmp	.+68     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3d8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 3dc:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 3e0:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <data>
 3e4:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <data+0x1>
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	b1 f0       	breq	.+44     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ec:	85 b9       	out	0x05, r24	; 5
 3ee:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <data+0x1>
 3f2:	84 60       	ori	r24, 0x04	; 4
 3f4:	88 b9       	out	0x08, r24	; 8
 3f6:	c9 e0       	ldi	r28, 0x09	; 9
 3f8:	d0 e0       	ldi	r29, 0x00	; 0
 3fa:	10 c0       	rjmp	.+32     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fc:	84 ef       	ldi	r24, 0xF4	; 244
 3fe:	91 e0       	ldi	r25, 0x01	; 1
 400:	4f df       	rcall	.-354    	; 0x2a0 <Timer>
 402:	88 23       	and	r24, r24
 404:	59 f0       	breq	.+22     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 406:	15 b8       	out	0x05, r1	; 5
 408:	18 b8       	out	0x08, r1	; 8
 40a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <Tstate+0x1>
 40e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <Tstate>
 412:	c0 e0       	ldi	r28, 0x00	; 0
 414:	d0 e0       	ldi	r29, 0x00	; 0
 416:	02 c0       	rjmp	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	c0 e0       	ldi	r28, 0x00	; 0
 41a:	d0 e0       	ldi	r29, 0x00	; 0
 41c:	ce 01       	movw	r24, r28
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <main>:
	return state;
}


int main(void)
{
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	cd b7       	in	r28, 0x3d	; 61
 42a:	de b7       	in	r29, 0x3e	; 62
 42c:	2b 97       	sbiw	r28, 0x0b	; 11
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	de bf       	out	0x3e, r29	; 62
 434:	0f be       	out	0x3f, r0	; 63
 436:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; BOUT = 0x00; // ID LED's
 438:	8f ef       	ldi	r24, 0xFF	; 255
 43a:	84 b9       	out	0x04, r24	; 4
 43c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; COUT = 0x00; // ID LED's
 43e:	87 b9       	out	0x07, r24	; 7
 440:	18 b8       	out	0x08, r1	; 8
	
	DDRD = 0xFF; PORTD = 0x00; // RF Input and Output
 442:	8a b9       	out	0x0a, r24	; 10
 444:	1b b8       	out	0x0b, r1	; 11
	DDRA = 0x00; PORTA = 0xFF; // Temp Resistor
 446:	11 b8       	out	0x01, r1	; 1
 448:	82 b9       	out	0x02, r24	; 2
	
	//unsigned short x =ADC_read(1);
	
	
	//Set_Clock(500);
	tasksNum = 1;
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tasksNum>
	task tsks[1];
	tasks = tsks;
 450:	ce 01       	movw	r24, r28
 452:	01 96       	adiw	r24, 0x01	; 1
 454:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <tasks+0x1>
 458:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <tasks>
	
	// define tasks
	unsigned char i=0;
	tasks[i].state = Idle;
 45c:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].period = 1;
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	a0 e0       	ldi	r26, 0x00	; 0
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	8a 83       	std	Y+2, r24	; 0x02
 468:	9b 83       	std	Y+3, r25	; 0x03
 46a:	ac 83       	std	Y+4, r26	; 0x04
 46c:	bd 83       	std	Y+5, r27	; 0x05
	tasks[i].elapsedTime = tasks[i].period;
 46e:	8e 83       	std	Y+6, r24	; 0x06
 470:	9f 83       	std	Y+7, r25	; 0x07
 472:	a8 87       	std	Y+8, r26	; 0x08
 474:	b9 87       	std	Y+9, r27	; 0x09
	tasks[i].TickFct = &TickFct_Leader;
 476:	80 e7       	ldi	r24, 0x70	; 112
 478:	91 e0       	ldi	r25, 0x01	; 1
 47a:	9b 87       	std	Y+11, r25	; 0x0b
 47c:	8a 87       	std	Y+10, r24	; 0x0a
	
	TimerSet(tasks[i].period);
 47e:	61 e0       	ldi	r22, 0x01	; 1
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	d7 de       	rcall	.-594    	; 0x236 <TimerSet>
	TimerOn();
 488:	e7 de       	rcall	.-562    	; 0x258 <TimerOn>
 48a:	ff cf       	rjmp	.-2      	; 0x48a <main+0x66>

0000048c <_exit>:
 48c:	f8 94       	cli

0000048e <__stop_program>:
 48e:	ff cf       	rjmp	.-2      	; 0x48e <__stop_program>
